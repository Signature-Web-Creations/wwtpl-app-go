{"version":3,"sources":["routes.js","Header.js","PaginationButton.js","SearchForm.js","RecordRow.js","RecordTable.js","api.js","RecordDetail.js","auth.js","MessageBox.js","LoginForm.js","hooks.js","admin/RecordRow.js","admin/RecordTable.js","Dashboard.js","admin/RecordForm.js","admin/UserForm.js","admin/UserListings.js","admin/EditableNameTable.js","admin/SourceArchiveListings.js","admin/CollectionListings.js","admin/RecordTypeListings.js","App.js","reportWebVitals.js","index.js"],"names":["routes","adminHome","home","login","logout","showUsers","addUser","editUser","url","params","id","showSourceArchives","showCollections","showRecordTypes","UrlFor","name","route","undefined","Error","Header","props","className","children","PrevButton","currentPage","type","href","uk-pagination-previous","NextButton","pages","uk-pagination-next","PaginationButtons","style","height","padding","borderWidth","SearchForm","useState","query","setQuery","searchYear","setSearchYear","searchCollection","setSearchCollection","searchSourceArchive","setSearchSourceArchive","searchRecordType","setSearchRecordType","searchStatus","setSearchStatus","showAdvancedSearch","setShowAdvancedSearch","advancedSearchClassName","advancedSearchOptionsClass","user","role","onSubmit","e","preventDefault","performSearch","uk-grid","value","placeholder","onChange","target","years","map","year","uk-icon","uk-tooltip","onClick","recordTypes","sourceArchives","collections","status","RecordRow","date","title","to","NoResultsPage","PublicListings","records","recordType","RecordTable","searched","buildURLWithQueryParameters","baseUri","queryParameters","offset","push","encodeURIComponent","searchRecordStatus","getQueryParameters","length","join","getListingData","uri","fetch","then","res","json","getPublicListingData","a","method","mode","cache","credentials","response","username","password","data","headers","body","JSON","stringify","userData","userId","recordToForm","record","formData","FormData","append","content","file","author","sourceArchive","recordStatus","shouldKeepFile","recordId","recordStatusId","getValueOrDefault","defaultValue","Loading","TitleRow","PdfRow","src","width","ImageRow","alt","FileAttachmentRow","attachmentType","fileName","ContentRow","text","formatDate","matches","match","month","day","DateRow","OriginRow","origin","AuthorRow","RecordTypeRow","SourceArchiveRow","CollectionRow","split","getCollectionArray","collection","Detail","RecordDetail","useParams","setRecord","useEffect","getPublicRecordByID","authContext","createContext","useAuth","useContext","useProvideAuth","setUser","signin","onError","result","success","signout","ProvideAuth","auth","Provider","PrivateRoute","rest","render","MessageBox","messageClass","uk-alert","uk-close","message","LoginForm","setUsername","setPassword","error","setError","event","useSearchParams","URLSearchParams","useLocation","search","handleStatusColor","editUrl","onDelete","deleted","AdminListings","Dashboard","searchParameters","offsetParam","get","parseInt","isNaN","getOffset","setRecords","setYears","setPages","setRecordTypes","setCollections","setSourceArchives","setRecordStatus","setSearched","download","searchParams","updatedRecords","r","deleteRecord","restoreRecord","blank","s","trim","ValidationError","FileInput","uk-form-custom","accept","class","disabled","FileView","embed","RecordForm","setTitle","setContent","setFile","setFileName","setAttachmentType","setShouldKeepFile","hasFile","setHasFile","setDate","setOrigin","setAuthor","setRecordType","setSourceArchive","newRecord","setMessage","validationErrors","setValidationErrors","clearValidationError","fieldName","errors","Object","assign","clearTitleError","clearDateError","clearRecordTypeError","clearSourceArchiveError","clearCollectionsError","validateForm","valid","getRecordByID","changeRecordStatus","c","forEach","col","collectionToId","parseIntOrError","str","n","handleSubmit","saveRecord","updateRecord","window","location","header","encType","htmlFor","files","checked","includes","filter","i","concat","handleCollection","ToggleButton","toggle","on","onText","offText","UserForm","isNewUser","console","log","firstName","setFirstName","lastName","setLastName","disableUsername","setDisableUsername","disablePassword","setDisablePassword","roleId","setRoleId","roles","setRoles","getUser","getUserRoles","createUser","updateUser","toUpperCase","slice","UserRow","active","changeStatus","UserListings","users","setUsers","toggleStatus","updatedUsers","disableUser","enableUser","getUsers","Row","editable","autoFocus","align","onClickSave","onClickEdit","EditableNameTable","setName","editId","setEditId","handleAdd","rows","handleChange","handleUpdate","SourceArchiveListings","getSourceArchives","addSourceArchive","updateSourceArchive","CollectionListings","getCollections","addCollection","updateCollection","RecordTypeListings","getRecordTypes","addRecordType","updateRecordType","App","setCollectionToId","path","buttonText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.552b96ab.chunk.js","sourcesContent":["const routes = {\n  adminHome: '/admin',\n  home: '/',\n  login: '/login',\n  logout: '/logout',\n  showUsers: '/users',\n  addUser: '/adduser',\n  editUser: {\n    url: '/user/edit',\n    params: {\n      id: ':id'\n    }\n  },\n\n  showSourceArchives: '/sourceArchives',\n  showCollections: '/collections',\n  showRecordTypes: '/recordTypes',\n\n  showCollections: '/collections',\n  addCollection: '/collections/new',\n  editCollection: {\n    url: '/collection/edit',\n    params: {\n      id: ':id',\n    },\n  },\n\n  newRecord: '/record/new',\n  editRecord: {\n    url: '/record/edit',\n    params: {\n      id: ':id',\n    },\n  },\n  viewRecord: {\n    url: '/record/view',\n    params: {\n      id: ':id',\n    },\n  },\n}\n\nexport function UrlFor(name, params) {\n  let route = ''\n\n  if (typeof routes[name] === 'string') {\n    route = routes[name]\n  } else {\n    if (params !== undefined) {\n      route = routes[name].url + '/' + params.id\n    } else {\n      route = routes[name].url + '/' + routes[name].params.id\n    }\n  }\n\n  if (route === undefined) {\n    throw new Error(`Route doesn't exist: ${name}`)\n  }\n\n  return route\n}\n","\nexport default function Header(props) {\n   return (\n    <div className=\"uk-margin-top\">\n     {props.children}\n    </div>\n   )\n}\n","function PrevButton(props) {\n  if (props.currentPage === 0) {\n    return null\n  }\n\n  const type = props.type ? props.type : ''\n  const href = `/${type}?offset=${props.currentPage - 1}`\n  return (\n    <a href={href}>\n      <span\n        className=\"uk-margin-small-right\"\n        uk-pagination-previous=\"true\"\n      ></span>\n      Previous\n    </a>\n  )\n}\n\nfunction NextButton(props) {\n  if (props.currentPage >= props.pages) {\n    return null\n  }\n\n  const type = props.type ? props.type : ''\n  const href = `/${type}?offset=${props.currentPage + 1}`\n  return (\n    <a href={href}>\n      Next\n      <span className=\"uk-margin-small-left\" uk-pagination-next=\"true\"></span>\n    </a>\n  )\n}\n\nexport default function PaginationButtons(props) {\n  if (props.pages === null) {\n    return null\n  } else {\n    return (\n      <ul className=\"uk-pagination uk-margin-large-top\">\n        <li>\n          <PrevButton currentPage={props.currentPage} type={props.type} />\n        </li>\n        <li>\n          <hr\n            className=\"uk-divider-vertical\"\n            style={{ height: '30px', padding: '4px 0', borderWidth: '2px' }}\n          />\n        </li>\n        <li>\n          <NextButton\n            currentPage={props.currentPage}\n            pages={props.pages}\n            type={props.type}\n          />\n        </li>\n      </ul>\n    )\n  }\n}\n","import './SearchForm.css'\nimport { useState } from 'react'\n\nexport default function SearchForm(props) {\n  const [query, setQuery] = useState('')\n  const [searchYear, setSearchYear] = useState('')\n  const [searchCollection, setSearchCollection] = useState('')\n  const [searchSourceArchive, setSearchSourceArchive] = useState('')\n  const [searchRecordType, setSearchRecordType] = useState('')\n  const [searchStatus, setSearchStatus] = useState('')\n\n  const [showAdvancedSearch, setShowAdvancedSearch] = useState(false)\n  const performSearch = () => {\n    const params = {\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n      searchStatus,\n    }\n    props.onSubmit(params)\n  }\n  const clearSearchFields = () => {\n    setQuery('')\n    setSearchYear('')\n    setSearchCollection('')\n    setSearchSourceArchive('')\n    setSearchRecordType('')\n    setSearchStatus('')\n  }\n  const show = showAdvancedSearch ? 'show' : ''\n  const advancedSearchClassName = `advancedSearchOptions uk-grid-small ${show}`\n\n  // If user is an admin\n  const advancedSearchOptionsClass =\n    props.user !== undefined && props.user.role !== 'editor'\n      ? 'uk-width-1-4@s'\n      : 'uk-width-1-3@s'\n\n  return (\n    <form\n      className=\"uk-margin-large-top\"\n      onSubmit={(e) => {\n        e.preventDefault()\n        performSearch()\n      }}\n    >\n      <div className=\"searchBar uk-grid-small\" uk-grid=\"true\">\n        <div className=\"uk-width-expand@s\">\n          <input\n            className=\"uk-input\"\n            value={query}\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={(e) => {\n              setQuery(e.target.value)\n            }}\n          />\n        </div>\n\n        <div className=\"uk-width-1-3@s\">\n          <select\n            className=\"uk-select\"\n            value={searchYear}\n            onChange={(e) => {\n              setSearchYear(e.target.value)\n            }}\n          >\n            <option value=\"\">Year</option>\n            {props.years.map((year) => (\n              <option key={year} value={year}>\n                {' '}\n                {year}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div\n          className=\"advancedSearchButton uk-width-auto@s uk-grid-small\"\n          uk-grid=\"true\"\n        >\n          <div className=\"uk-width-auto\">\n            <button\n              className=\"uk-button uk-button-default\"\n              uk-icon=\"more\"\n              uk-tooltip=\"Advanced Search Options\"\n              onClick={() => {\n                setShowAdvancedSearch(!showAdvancedSearch)\n              }}\n            ></button>\n          </div>\n\n          <div className=\"uk-width-auto\">\n            <button\n              className=\"uk-button uk-button-default\"\n              type=\"submit\"\n              uk-icon=\"refresh\"\n              uk-tooltip=\"Clear Search\"\n              onClick={() => {\n                clearSearchFields()\n              }}\n            ></button>\n          </div>\n\n          <div className=\"uk-width-auto\">\n            <button\n              className=\"uk-button uk-button-primary searchButton\"\n              type=\"submit\"\n              uk-icon=\"search\"\n              uk-tooltip=\"Search\"\n            ></button>\n          </div>\n        </div>\n      </div>\n\n      <div className={advancedSearchClassName} uk-grid=\"true\">\n        <div className={advancedSearchOptionsClass}>\n          <select\n            className=\"uk-select\"\n            value={searchRecordType}\n            onChange={(e) => {\n              setSearchRecordType(e.target.value)\n            }}\n          >\n            <option value=\"\"> Type </option>\n            {props.recordTypes.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className={advancedSearchOptionsClass}>\n          <select\n            className=\"uk-select\"\n            value={searchSourceArchive}\n            onChange={(e) => {\n              setSearchSourceArchive(e.target.value)\n            }}\n          >\n            <option value=\"\"> Source Archive </option>\n            {props.sourceArchives.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className={advancedSearchOptionsClass}>\n          <select\n            className=\"uk-select\"\n            value={searchCollection}\n            onChange={(e) => {\n              setSearchCollection(e.target.value)\n            }}\n          >\n            <option value=\"\"> Collection </option>\n            {props.collections.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {props.user !== undefined && props.user.role !== 'editor' && (\n          <div className={advancedSearchOptionsClass}>\n            <select\n              className=\"uk-select\"\n              value={searchStatus}\n              onChange={(e) => {\n                setSearchStatus(e.target.value)\n              }}\n            >\n              <option value=\"\">Status</option>\n              {props.status.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {' '}\n                  {name}{' '}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n      </div>\n    </form>\n  )\n}\n","import { Link } from 'react-router-dom'\nimport { UrlFor } from './routes'\n\nexport default function RecordRow(props) {\n  return (\n    <tr>\n      <td>{props.date}</td>\n      <td>{props.title}</td>\n      <td>{props.type}</td>\n      <td>\n        <Link\n          to={UrlFor('viewRecord', { id: props.id })}\n          className=\"uk-button uk-button-primary\"\n        >\n          {' '}\n          View{' '}\n        </Link>\n      </td>\n    </tr>\n  )\n}\n","import RecordRow from './RecordRow'\n\nfunction NoResultsPage() {\n  return <h1> Your search did not return any results. </h1>\n}\n\nfunction PublicListings(props) {\n  return (\n    <table className=\"uk-table uk-table-middle uk-table-divider uk-table-hover uk-margin-medium\">\n      <thead>\n        <tr>\n          <th className=\"uk-width-small\">Date</th>\n          <th>Title</th>\n          <th>Type</th>\n          <th className=\"uk-table-shrink\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.records.map(({ id, date, title, recordType }) => (\n          <RecordRow\n            id={id}\n            key={id}\n            date={date}\n            title={title}\n            type={recordType === null ? \"N/A\" : recordType.name}\n          />\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default function RecordTable(props) {\n  if (props.records === null) {\n    if (props.searched) {\n      return <NoResultsPage />\n    } else {\n      return null\n    }\n  } else {\n    return <PublicListings records={props.records} />\n  }\n}\n","const getQueryParameters = (params) => {\n  const queryParameters = []\n  if (params.offset && params.offset !== null) {\n    queryParameters.push(`offset=${encodeURIComponent(params.offset)}`)\n  }\n\n  if (params.query && params.query !== '') {\n    queryParameters.push(`query=${encodeURIComponent(params.query)}`)\n  }\n\n  if (params.searchYear && params.searchYear !== '') {\n    queryParameters.push(`year=${encodeURIComponent(params.searchYear)}`)\n  }\n\n  if (params.searchCollection && params.searchCollection !== '') {\n    queryParameters.push(\n      `collection=${encodeURIComponent(params.searchCollection)}`,\n    )\n  }\n\n  if (params.searchSourceArchive && params.searchSourceArchive !== '') {\n    queryParameters.push(\n      `sourceArchive=${encodeURIComponent(params.searchSourceArchive)}`,\n    )\n  }\n\n  if (params.searchRecordType && params.searchRecordType !== '') {\n    queryParameters.push(\n      `recordType=${encodeURIComponent(params.searchRecordType)}`,\n    )\n  }\n\n  if (params.searchRecordStatus && params.searchRecordStatus !== '') {\n    queryParameters.push(\n      `recordStatus=${encodeURIComponent(params.searchRecordStatus)}`,\n    )\n  }\n  return queryParameters\n}\n\nconst buildURLWithQueryParameters = (baseUri, params) => {\n  const queryParameters = getQueryParameters(params)\n\n  if (queryParameters.length !== 0) {\n    return baseUri + `?${queryParameters.join('&')}`\n  } else {\n    return baseUri\n  }\n}\n\n// Returns listing data for dashboard.\n// Records are returned based on if the user is an editor, publisher\n// or admin\nexport function getListingData(params) {\n  const uri = buildURLWithQueryParameters('/api/records', params)\n  return fetch(uri).then((res) => res.json())\n}\n\n// Returns listing data for public users\nexport function getPublicListingData(params) {\n  const uri = buildURLWithQueryParameters('/api/public/records', params)\n  return fetch(uri).then((res) => res.json())\n}\n\nexport function getPublicRecordByID(id) {\n  return fetch(`/api/public/records/${id}`).then((res) => res.json())\n}\n\n// Retrieves a record by its id regardless of status.\n// User must be logged in\nexport async function getRecordByID(id) {\n  const response = await fetch(`/api/records/${id}`, {\n    method: 'GET',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n  })\n\n  return await response.json()\n}\n\nexport async function login(username, password) {\n  const data = { username, password }\n\n  const response = await fetch('/api/login', {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  })\n\n  return response.json()\n}\n\nexport async function logout() {\n  return fetch('/api/logout', {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n  })\n}\n\n// Returns user data for the logged in user.\n// If user is not logged in returns an error message\nexport function getUserData() {\n  return fetch(`/api/user`).then((res) => res.json())\n}\n\n// Creates a new user. User must be authenticated\n// and an admin to succeed\nexport async function createUser(userData) {\n  const response = await fetch('/api/user', {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n\n    body: JSON.stringify(userData),\n  })\n\n  return response.json()\n}\n\n// Updates a user. User must be authenticated\n// and an admin to succeed\nexport async function updateUser(userId, userData) {\n  const response = await fetch(`/api/user/${userId}`, {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n\n    body: JSON.stringify(userData),\n  })\n\n  return response.json()\n}\n\nexport async function getUser(userId) {\n  const response = await fetch(`/api/users/${userId}`, {\n    method: 'GET',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n  })\n  return response.json() \n}\n\n// Returns a json list of users. If the user is not\n// authenticated returns a 401 unauthorized\nexport async function getUsers() {\n  const response = await fetch('/api/users', {\n    method: 'GET',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n  })\n\n  return response.json()\n}\n\n// Returns a list of user roles.\nexport async function getUserRoles() {\n  const response = await fetch('/api/user_roles', {\n    method: 'GET',\n    mode: 'same-origin',\n    cache: 'no-cache',\n  })\n\n  return response.json()\n}\n\n// Disables a user\nexport async function disableUser(userId) {\n  const response = await fetch(`/api/user/disable/${userId}`, {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  return response.json()\n}\n\n// Enables a user\nexport async function enableUser(userId) {\n  const response = await fetch(`/api/user/enable/${userId}`, {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  return response.json()\n}\n\nconst recordToForm = (record) =>  {\n  const formData = new FormData()\n  formData.append('title', record.title)\n  formData.append('content', record.content)\n\n  if (record.file !== null) {\n    formData.append('file', record.file)\n  }\n\n  formData.append('date', record.date)\n  formData.append('author', record.author)\n  formData.append('recordType', record.recordType)\n  formData.append('sourceArchive', record.sourceArchive)\n  formData.append('collections', record.collections)\n  formData.append('recordStatus', record.recordStatus)\n  formData.append('shouldKeepFile', record.shouldKeepFile)\n\n  return formData\n}\n\nexport async function saveRecord(record) {\n\n  const response = await fetch('/api/records', {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    body: recordToForm(record),\n  })\n\n  return response.json()\n}\n\nexport async function updateRecord(recordId, record) {\n  const response = await fetch(`/api/records/${recordId}`, {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    body: recordToForm(record),\n  })\n  return response.json()\n}\n\nexport async function changeRecordStatus(recordId, recordStatusId) {\n  const response = await fetch(`/api/records/status/${recordId}`, {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ recordId, recordStatusId }),\n  })\n  return response.json()\n}\n\nexport async function deleteRecord(recordId) {\n  const response = await fetch(`/api/records/delete/${recordId}`, {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  })\n  return response\n}\n\nexport async function restoreRecord(recordId) {\n  const response = await fetch(`/api/records/restore/${recordId}`, {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  })\n  return response\n}\n\nexport async function getSourceArchives() {\n  const response = await fetch('/api/sourceArchives', {\n    method: 'GET', \n    mode: 'same-origin', \n    cache: 'no-cache', \n    credentials: 'include', \n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n  return response.json()\n}\n\nexport async function addSourceArchive(name) {\n  let formData = new FormData()\n  formData.append(\"name\", name)\n\n  const response = await fetch('/api/sourceArchives', {\n    method: 'POST', \n    mode: 'same-origin', \n    cache: 'no-cache', \n    credentials: 'include', \n    body: formData,\n  })\n  return response.json()\n}\n\nexport async function updateSourceArchive(id, name) {\n  let formData = new FormData()\n  formData.append(\"name\", name)\n\n  const response = await fetch(`/api/sourceArchives/${id}`, {\n    method: 'POST', \n    mode: 'same-origin', \n    cache: 'no-cache', \n    credentials: 'include', \n    body: formData,\n  })\n  return response.json()\n}\n\nexport async function getCollections() {\n  const response = await fetch('/api/collections', {\n    method: 'GET', \n    mode: 'same-origin', \n    cache: 'no-cache', \n    credentials: 'include', \n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n  return response.json()\n}\n\nexport async function addCollection(name) {\n  let formData = new FormData()\n  formData.append(\"name\", name)\n\n  const response = await fetch('/api/collections', {\n    method: 'POST', \n    mode: 'same-origin', \n    cache: 'no-cache', \n    credentials: 'include', \n    body: formData,\n  })\n  return response.json()\n}\n\nexport async function updateCollection(id, name) {\n  let formData = new FormData()\n  formData.append(\"name\", name)\n\n  const response = await fetch(`/api/collections/${id}`, {\n    method: 'POST', \n    mode: 'same-origin', \n    cache: 'no-cache', \n    credentials: 'include', \n    body: formData,\n  })\n  return response.json()\n}\n\nexport async function getRecordTypes() {\n  const response = await fetch('/api/recordTypes', {\n    method: 'GET', \n    mode: 'same-origin', \n    cache: 'no-cache', \n    credentials: 'include', \n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n  return response.json()\n}\n\nexport async function addRecordType(name) {\n  let formData = new FormData()\n  formData.append(\"name\", name)\n\n  const response = await fetch('/api/recordTypes', {\n    method: 'POST', \n    mode: 'same-origin', \n    cache: 'no-cache', \n    credentials: 'include', \n    body: formData,\n  })\n  return response.json()\n}\n\nexport async function updateRecordType(id, name) {\n  let formData = new FormData()\n  formData.append(\"name\", name)\n\n  const response = await fetch(`/api/recordTypes/${id}`, {\n    method: 'POST', \n    mode: 'same-origin', \n    cache: 'no-cache', \n    credentials: 'include', \n    body: formData,\n  })\n  return response.json()\n}\n","import { useParams } from 'react-router-dom'; \nimport { useState, useEffect } from 'react';\nimport { getPublicRecordByID } from './api';\n\nconst getValueOrDefault = (value, defaultValue) => {\n  if (value) {\n    return value\n  } else {\n    return defaultValue;\n  }\n}\n\nfunction Loading() {\n  return <h1> Loading </h1> \n}\n\nfunction TitleRow(props) {\n  return (\n    <tr>\n      <td className=\"uk-width-medium\"><strong>Title</strong></td>\n      <td>{props.title}</td>\n    </tr>\n  )\n}\n\nfunction PdfRow(props) {\n  return (\n    <tr>\n      <td><strong> Document </strong></td>\n      <td>\n        <embed src={`/media/${props.src}`} type=\"application/pdf\" width=\"100%\" height=\"600px\" />\n      </td>\n    </tr>\n  )\n}\n\nfunction ImageRow(props) {\n  return (\n    <tr>\n      <td><strong>Image</strong></td>\n      <td><img alt={props.alt} src={`/media/${props.src}`} /></td>\n    </tr>\n  )\n}\n\nfunction FileAttachmentRow(props) {\n  if (props.attachmentType === null) {\n    return null;\n  } else if (props.attachmentType === 'document') {\n    return <PdfRow src={props.fileName} />\n  } else if (props.attachmentType === 'image') {\n    return <ImageRow alt={props.title} src={props.fileName} />\n  } else {\n    return null;\n  }\n}\n\nfunction ContentRow(props) {\n  const text = props.content === \"\" ? \"No content\" : props.content; \n  return (\n    <tr>\n      <td>\n        <strong>\n          Text\n        </strong>\n      </td>\n      <td> {text} </td>\n    </tr>\n  );\n}\n\nconst formatDate = (date) => {\n  // Converts date with format yyyy-mm-dd to mm/dd/yyyy\n  // If it cannot convert, then just returns the given date\n\n  const re = /(\\d{4})-(\\d{2})-(\\d{2})/;\n  const matches = date.match(re); \n  if (matches !== null) {\n    const year = matches[1];\n    const month = matches[2];\n    const day = matches[3];\n  \n    return `${month}/${day}/${year}`;\n  } else {\n    return date;\n  }\n}\n\nfunction DateRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>\n          Date\n        </strong>\n      </td>\n      <td>{props.date === \"\" ? \"Date unknown\" : formatDate(props.date)} </td>\n    </tr>\n  );\n}\n\nfunction OriginRow(props) {\n  return (\n    <tr>\n     <td>\n      <strong>\n        Origin\n      </strong>\n     </td>\n     <td>{getValueOrDefault(props.origin, \"Origin Unknown\")}</td>\n    </tr>\n  )\n}\n\nfunction AuthorRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>\n          Author\n        </strong>\n      </td>\n      <td>{getValueOrDefault(props.author, \"Unknown\")}</td>\n    </tr>\n  );\n}\n\nfunction RecordTypeRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>\n          Type\n        </strong>\n      </td>\n      <td>{getValueOrDefault(props.recordType.name, \"Unknown\")}</td>\n    </tr>\n  );\n}\n\nfunction SourceArchiveRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>\n          Source Archive\n        </strong>\n      </td>\n      <td>{getValueOrDefault(props.sourceArchive.name, \"Unknown\")}</td>\n    </tr>\n  );\n}\n\nfunction getCollectionArray(collections){\n  if (collections) {\n    return collections.split(';');\n  } else {\n    return [];\n  }\n}\n\nfunction CollectionRow(props) {\n  let collections = getCollectionArray(props.collections)\n\n  const collectionLabel = (collection) => {\n    return (\n      <span key={collection} className=\"uk-label\"> {collection} </span>\n    )\n  }\n  \n  if (collections.length === 0) {\n    collections.push('Collection Unknown');\n  }\n\n  return (\n    <tr>\n      <td>\n        <strong>\n          Collection\n        </strong>\n      </td>\n      <td> \n        {collections.map(collectionLabel)}\n      </td>\n    </tr>\n  );\n}\n\nfunction Detail(props) {\n  const record = props.record;\n  return (\n    <table className=\"uk-table uk-table-small uk-table-divider uk-margin-medium\">\n      <tbody>\n        <TitleRow title={record.title} />\n        <FileAttachmentRow title={record.title} attachmentType={record.attachmentType} fileName={record.fileName} />\n        <ContentRow content={record.content} />\n        <DateRow date={record.date} />\n        <OriginRow origin={record.origin} />\n        <AuthorRow author={record.author} />\n        <RecordTypeRow recordType={record.recordType} />\n        <SourceArchiveRow sourceArchive={record.sourceArchive} />\n        <CollectionRow collections={record.collections} />\n      </tbody>\n    </table>\n  );\n}\n  \n\nfunction RecordDetail(props) {\n  let {id} = useParams();\n\n  const [record, setRecord] = useState(null)\n\n  useEffect(() => {\n    getPublicRecordByID(id).then(setRecord)\n  }, [id])\n\n  if (!record) {\n    return <Loading />\n  } else {\n    return <Detail record={record} />\n  }\n}\n\nexport default RecordDetail; \n","import {useState, useEffect, useContext, createContext} from 'react';\nimport {getUserData, login, logout} from './api'; \nimport {Route, Redirect} from 'react-router-dom';\n\n\n// Code for creating authContext and hooks \n// Adapted from https://usehooks.com/useAuth/\nconst authContext = createContext();\n\n// Hook for components to get the auth object\n// and re-render when it changes\nexport function useAuth() {\n  return useContext(authContext) \n}\n\n// Provider hook that creates auth object and handles state\nexport function useProvideAuth() {\n  const [user, setUser] = useState(false) \n\n  useEffect(() => {\n    getUserData().then(json => {\n      if (json.username) {\n        setUser(json)\n      }\n    })\n  }, [])\n\n  const signin = (username, password, onError) => {\n    login(username, password).then(result => {\n      if (result.success) {\n        setUser(result.user)\n      } else {\n        onError('invalid username/password')\n      }\n    })\n  }\n\n  const signout = () => {\n    setUser(false)\n    logout()\n  }\n\n  return {\n    user, \n    signin,\n    signout,\n  }\n}\n\n// Provider component that wraps your app and makes auth object\n// available to any child component that calls useAuth()\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n\nexport function PrivateRoute({children, ...rest}) {\n  let auth = useAuth()\n\n  return (\n    <Route\n      {...rest} \n      render={() => \n        auth.user ? (\n          children\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  )\n}\n","function MessageBox(props) {\n  let messageClass = ''\n  if (props.type === 'error') {\n    messageClass = 'uk-alert-danger'\n  } else if (props.type === 'warning') {\n    messageClass = 'uk-alert-warning'\n  } else {\n    messageClass = 'uk-alert-success'\n  }\n\n  return (\n    <div uk-alert=\"true\" className={messageClass}>\n      {props.type !== 'warning' && (\n        <button\n          className=\"uk-alert-close\"\n          uk-close=\"true\"\n          onClick={props.onClick}\n        ></button>\n      )}\n      <p>{props.message}</p>\n    </div>\n  )\n}\n\nexport default MessageBox\n","import { useState } from 'react'\nimport { useAuth } from './auth.js'\nimport { Redirect } from 'react-router-dom'\n\nimport MessageBox from './MessageBox.js'\n\nexport default function LoginForm(props) {\n  const auth = useAuth()\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState(null)\n\n  const changeUsername = (event) => {\n    setError(null)\n    setUsername(event.target.value)\n  }\n\n  const changePassword = (event) => {\n    setError(null)\n    setPassword(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    auth.signin(username, password, (value) => setError(value))\n  }\n\n  if (auth.user) {\n    return <Redirect to=\"/dashboard\" />\n  }\n\n  return (\n    <form\n      className=\"uk-form-stacked uk-form-width-large uk-margin-top\"\n      onSubmit={handleSubmit}\n    >\n      {error && (\n        <MessageBox\n          onClick={() => {\n            setError(null)\n          }}\n          message={error}\n          type=\"error\"\n        />\n      )}\n\n      <div>\n        <label className=\"uk-form-label\"> Username </label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"text\"\n          name=\"username\"\n          onChange={changeUsername}\n          value={username}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label\"> Password </label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"password\"\n          name=\"password\"\n          onChange={changePassword}\n          value={password}\n        />\n      </div>\n      <input\n        className=\"uk-button uk-button-primary uk-margin-top\"\n        type=\"submit\"\n        value=\"login\"\n      />\n    </form>\n  )\n}\n","import {useLocation} from 'react-router-dom';\n\nexport function useSearchParams() {\n  // Returns search Parameters from URL \n  \n  return new URLSearchParams(useLocation().search);\n}\n","import { Link } from 'react-router-dom'\nimport { UrlFor } from '../routes.js'\nimport { useAuth } from '../auth.js'\n\nfunction RecordRow(props) {\n  const auth = useAuth()\n\n  const handleStatusColor = (status) => {\n    if (status === 'unpublished') {\n      return 'uk-label uk-label-warning'\n    } else if (status === 'deleted') {\n      return 'uk-label uk-label-danger'\n    } else if (status === \"pending_approval\") {\n      return 'uk-label'\n    } else {\n      return 'uk-label uk-label-success'\n    }\n  }\n\n  const editUrl = UrlFor('editRecord', { id: props.id })\n\n  return (\n    <tr>\n      <td>\n        <Link\n          to={editUrl}\n          className=\"uk-icon-link uk-margin-small-right\"\n          uk-icon=\"file-edit\"\n        ></Link>\n      </td>\n      {auth.user.role === 'admin' && (\n        <td>\n          <button\n            onClick={props.onDelete}\n            className=\"uk-icon-link uk-margin-small-right\"\n            uk-icon={props.deleted ? \"refresh\" : \"trash\"}\n          ></button>\n        </td>\n      )}\n      <td>{props.date}</td>\n      <td>{props.title}</td>\n      <td>\n        {props.deleted \n          ? <span className={handleStatusColor(\"deleted\")}> Deleted </span>\n          : <span className={handleStatusColor(props.status.name)}>{props.status.name}</span>\n        }\n      </td>\n    </tr>\n  )\n}\n\nexport default RecordRow\n","import RecordRow from './RecordRow'\n\nfunction NoResultsPage() {\n  return <h1> Your search did not return any results. </h1>\n}\n\nfunction AdminListings(props) {\n  return (\n    <table className=\"uk-table uk-table-middle uk-table-divider uk-table-hover uk-margin-medium\">\n      <thead>\n        <tr>\n          <th className=\"uk-table-small\"></th>\n          {props.user !== undefined && props.user.role === 'admin' && (\n            <th className=\"uk-table-small\"></th>\n          )}\n          <th className=\"uk-width-small\">Date</th>\n          <th>Title</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.records.map(({ id, date, title, recordStatus, deleted }) => (\n          <RecordRow\n            id={id}\n            key={id}\n            date={date}\n            title={title}\n            status={recordStatus}\n            deleted={deleted}\n            onDelete={() => {props.onDelete(id)}}\n          />\n        ))}\n      </tbody>\n    </table>\n  )\n\n}\n\nexport default function RecordTable(props) {\n  if (props.records === null) {\n    if (props.searched) {\n      return <NoResultsPage />\n    } else {\n      return null\n    }\n  } else {\n    return <AdminListings records={props.records} onDelete={props.onDelete}/>\n  }\n}\n","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UrlFor } from './routes'\nimport { getListingData, restoreRecord, deleteRecord } from './api'\nimport { useSearchParams } from './hooks'\nimport { useAuth } from './auth.js'\nimport AdminListings from './admin/RecordTable'\nimport SearchForm from './SearchForm'\nimport PaginationButtons from './PaginationButton'\n\nfunction getOffset(searchParameters) {\n  let offsetParam = searchParameters.get('offset')\n  if (offsetParam === null) {\n    return 0\n  }\n  let offset = parseInt(offsetParam)\n  if (isNaN(offset)) {\n    return 0\n  }\n\n  return offset\n}\n\nexport default function Dashboard() {\n  const auth = useAuth()\n  const searchParameters = useSearchParams()\n  const offset = getOffset(searchParameters)\n\n  const [records, setRecords] = useState(null)\n  const [years, setYears] = useState([])\n  const [pages, setPages] = useState(null)\n  const [recordTypes, setRecordTypes] = useState([])\n  const [collections, setCollections] = useState([])\n  const [sourceArchives, setSourceArchives] = useState([])\n  const [recordStatus, setRecordStatus] = useState([])\n\n  const [searched, setSearched] = useState(false)\n\n  const toggleDelete = function (id) {\n    let deleted = false\n    let updatedRecords = records.map((r) => {\n      if (r.id === id) {\n        r.deleted = !r.deleted\n        deleted = r.deleted\n        return r\n      } else {\n        return r\n      }\n    })\n    if (deleted) {\n      deleteRecord(id)\n    } else {\n      restoreRecord(id)\n    }\n    setRecords(updatedRecords)\n  }\n\n  const handleSearch = (searchParams) => {\n    if (!auth.user) return\n    const {\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n      searchStatus,\n    } = searchParams\n    const params = {\n      offset,\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n      searchStatus,\n    }\n    getListingData(params).then(({ records, pages, years }) => {\n      setRecords(records)\n      setPages(pages)\n      setYears(years)\n      setSearched(true)\n    })\n  }\n\n  useEffect(() => {\n    getListingData({ offset }).then(\n      ({\n        records,\n        pages,\n        years,\n        collections,\n        sourceArchives,\n        recordTypes,\n        recordStatus,\n      }) => {\n        setRecords(records)\n        setPages(pages)\n        setYears(years)\n        setCollections(collections.collections)\n        setSourceArchives(sourceArchives)\n        setRecordTypes(recordTypes)\n        setRecordStatus(recordStatus)\n      },\n    )\n  }, [offset, auth.user])\n\n  return (\n    <>\n      {auth.user.role === 'admin' && (\n        <Link\n          to={UrlFor('showUsers')}\n          className=\"uk-button uk-button-default uk-margin-right\"\n        >\n          {' '}\n          Manage Users{' '}\n        </Link>\n      )}\n\n      {auth.user.role === 'admin' && (\n        <Link\n          to={UrlFor('showSourceArchives')}\n          className=\"uk-button uk-button-default uk-margin-right\"\n        >\n          {' '}\n          Manage Source Archives{' '}\n        </Link>\n      )}\n\n      {auth.user.role === 'admin' && (\n        <Link\n          to={UrlFor('showCollections')}\n          className=\"uk-button uk-button-default uk-margin-right\"\n        >\n          {' '}\n          Manage Collections{' '}\n        </Link>\n      )}\n\n      {auth.user.role === 'admin' && (\n        <Link\n          to={UrlFor('showRecordTypes')}\n          className=\"uk-button uk-button-default uk-margin-right uk-margin-top\"\n        >\n          {' '}\n          Manage Record Types{' '}\n        </Link>\n      )}\n\n      {auth.user.role === 'admin' && (\n        <a\n          href=\"/api/exportCSV\"\n          target=\"_blank\"\n          download\n          className=\"uk-button uk-button-default uk-margin-right uk-margin-top\">\n          Export CSV\n        </a>\n      )}\n\n      <Link\n        to={UrlFor('newRecord')}\n        className=\"uk-button uk-button-default uk-margin-right uk-margin-top\"\n      >\n        {' '}\n        New Record{' '}\n      </Link>\n\n      <SearchForm\n        years={!years ? [] : years}\n        recordTypes={recordTypes}\n        collections={collections}\n        sourceArchives={sourceArchives}\n        status={recordStatus}\n        user={auth.user}\n        onSubmit={handleSearch}\n      />\n      <PaginationButtons\n        currentPage={!offset ? 0 : offset}\n        pages={pages}\n        type=\"admin\"\n      />\n\n      {/*\n       * List of pending records by default\n       * Needs to include a records status in the records\n       */}\n      <AdminListings\n        searched={searched}\n        records={records}\n        user={auth.user}\n        onDelete={toggleDelete}\n      />\n    </>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport {\n  getRecordByID,\n  saveRecord,\n  updateRecord,\n  changeRecordStatus,\n} from '../api'\n\nimport MessageBox from '../MessageBox'\n\n// Record Status\nconst IN_PROGRESS = 1\nconst PENDING_APPROVAL = 2\nconst PUBLISHED = 3\nconst UNPUBLISHED = 4\n\n// Returns true if string is blank\nfunction blank(s) {\n  return s.trim().length === 0\n}\n\nfunction ValidationError(props) {\n  return <label className=\"uk-form-danger\"> *{props.error} </label>\n}\n\nfunction FileInput(props) {\n  return (\n    <div className=\"uk-form-controls\">\n      <div uk-form-custom=\"target: true\">\n        <input\n          type=\"file\"\n          name=\"file\"\n          accept=\".jpg, .jpeg, .png, .pdf\"\n          onChange={props.onChange}\n        />\n        <input\n          class=\"uk-input uk-form-width-large\"\n          type=\"text\"\n          placeholder=\"Select file\"\n          disabled\n        />\n      </div>\n    </div>\n  )\n}\n\nfunction FileView(props) {\n  let embed = null\n  if (props.attachmentType === 'image') {\n    embed = <img alt=\"file attachment\" src={`/media/${props.fileName}`} />\n  } else if (props.attachmentType === 'document') {\n    embed = (\n      <embed\n        src={`/media/${props.fileName}`}\n        type=\"application/pdf\"\n        width=\"100%\"\n        height=\"600px\"\n      />\n    )\n  }\n  return <div className=\"uk-form-controls\">{embed}</div>\n}\n\nfunction RecordForm(props) {\n  let { id } = useParams()\n\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n\n  const [file, setFile] = useState(null)\n  const [fileName, setFileName] = useState(null)\n  const [attachmentType, setAttachmentType] = useState(null)\n  const [shouldKeepFile, setShouldKeepFile] = useState(false)\n  const [hasFile, setHasFile] = useState(null)\n\n  const [date, setDate] = useState('')\n  const [origin, setOrigin] = useState('')\n  const [author, setAuthor] = useState('')\n\n  const [recordType, setRecordType] = useState('')\n  const [sourceArchive, setSourceArchive] = useState('')\n  const [collections, setCollections] = useState([])\n  const [recordStatus, setRecordStatus] = useState(null)\n\n  const newRecord = id === undefined\n\n  const [message, setMessage] = useState({\n    message: null,\n    type: null,\n  })\n\n  const clearForm = () => {\n    setTitle('')\n    setContent('')\n    setDate('')\n    setOrigin('')\n    setAuthor('')\n    setRecordType('')\n    setSourceArchive('')\n    setCollections([])\n  }\n\n  // Form Validation\n  const [validationErrors, setValidationErrors] = useState({\n    title: null,\n    date: null,\n    recordType: null,\n    sourceArchive: null,\n    collections: null,\n  })\n\n  // Creates a helper function to clear validation errors\n  // I am using a closure here because if I mispelled a field\n  // name I want it to throw an error right away. Using\n  // something lke\n  const clearValidationError = (fieldName) => {\n    if (validationErrors[fieldName] === undefined) {\n      throw new Error(\n        `Cannot create helper function for unknown field: ${fieldName}`,\n      )\n    }\n    return () => {\n      if (validationErrors[fieldName]) {\n        let errors = {}\n        errors[fieldName] = null\n        setValidationErrors(Object.assign(validationErrors, errors))\n      }\n    }\n  }\n\n  const clearTitleError = clearValidationError('title')\n  const clearDateError = clearValidationError('date')\n  const clearRecordTypeError = clearValidationError('recordType')\n  const clearSourceArchiveError = clearValidationError('sourceArchive')\n  const clearCollectionsError = clearValidationError('collections')\n\n  // Returns an error message if date field has an error\n  // or returns false if it is valid\n  const validateDate = () => {\n    if (blank(date)) {\n      return 'Date is required.'\n    }\n    return null\n  }\n\n  // Validates all of the fields on the form.\n  // Returns true if there are no errors and it is ok to submit\n  const validateForm = () => {\n    let valid = true\n    let errors = {}\n\n    if (blank(title)) {\n      errors.title = 'Title is required'\n      valid = false\n    }\n\n    errors.date = validateDate()\n    valid = valid && errors.date === null\n\n    if (recordType === '') {\n      errors.recordType = 'You need to select a record type'\n      valid = false\n    }\n\n    if (sourceArchive === '') {\n      errors.sourceArchive = 'You need to select a source archive'\n      valid = false\n    }\n\n    if (collections.length === 0) {\n      errors.collections = 'You need to select at least one collection'\n    }\n\n    setValidationErrors(Object.assign(validationErrors, errors))\n    return valid\n  }\n\n  useEffect(() => {\n    if (!newRecord) {\n      // Populate form fields with record\n      getRecordByID(id).then((data) => {\n        if (data.record) {\n          const r = data.record\n          setTitle(r.title)\n          setContent(r.content)\n          setDate(r.date)\n          setOrigin(r.origin)\n          setAuthor(r.author)\n\n          // Some records did not have a record type\n          // this if keeps them from crashing the site\n          if (r.recordType !== null) {\n            setRecordType(r.recordType.id)\n          }\n\n          if (r.attachmentType !== null) {\n            setAttachmentType(r.attachmentType)\n            setFileName(r.fileName)\n            setShouldKeepFile(true)\n            setHasFile(true)\n          }\n\n          // Some records did not have a source archive\n          // this if keeps them from crashing the site\n          if (r.sourceArchive !== null) {\n            setSourceArchive(r.sourceArchive.id)\n          }\n\n          if (r.recordStatus.id === PUBLISHED) {\n            changeRecordStatus(id, UNPUBLISHED)\n            setRecordStatus(UNPUBLISHED)\n          } else {\n            setRecordStatus(r.recordStatus.id)\n          }\n\n          let c = []\n          // Some of the older entries do not have belong to\n          // any collections. Viewing them will break the\n          // app.\n          if (r.collections !== null) {\n            r.collections.split(';').forEach((col) => {\n              if (props.collectionToId[col]) {\n                c.push(props.collectionToId[col])\n              }\n            })\n            setCollections(c)\n          }\n        }\n      })\n    }\n  }, [newRecord, id, props.collectionToId])\n\n  const handleCollection = (id) => {\n    if (collections.includes(id)) {\n      setCollections(collections.filter((i) => i !== id))\n    } else {\n      setCollections(collections.concat(id))\n    }\n  }\n\n  const parseIntOrError = (str) => {\n    const n = parseInt(str)\n    if (isNaN(n)) {\n      throw new Error(`Couldn't parse int on string: ${str}`)\n    }\n    return n\n  }\n\n  const handleSubmit = (recordStatusId) => {\n    if (validateForm()) {\n      const formData = {\n        title: title.trim(),\n        content: content.trim(),\n        file: file,\n        date: date.trim(),\n        origin: origin.trim(),\n        author: author.trim(),\n        recordType: parseIntOrError(recordType),\n        sourceArchive: parseIntOrError(sourceArchive),\n        collections: collections.map(parseIntOrError),\n        recordStatus: recordStatusId === null ? IN_PROGRESS : recordStatusId,\n        shouldKeepFile: shouldKeepFile,\n      }\n\n      if (newRecord) {\n        saveRecord(formData).then((data) => {\n          if (data.error) {\n            setMessage({ message: data.error, type: 'error' })\n          } else {\n            clearForm()\n            setMessage({ message: data.success, type: 'success' })\n          }\n        })\n      } else {\n        updateRecord(parseIntOrError(id), formData).then((data) => {\n          if (data.error) {\n            setMessage({ message: data.error, type: 'error' })\n          } else {\n            window.location = '/'\n          }\n        })\n      }\n    } else {\n      setMessage({\n        message: 'Please fill out required fields correctly',\n        type: 'error',\n      })\n    }\n  }\n\n  const header = newRecord ? 'New Record' : 'Edit Record'\n\n  return (\n    <form\n      className=\"uk-form-horizontal uk-margin-large uk-margin-top\"\n      encType=\"multipart/form-data\"\n      onSubmit={handleSubmit}\n    >\n      {message.message && (\n        <MessageBox\n          onChange={() => {\n            setMessage({\n              message: null,\n              type: null,\n            })\n          }}\n          message={message.message}\n          type={message.type}\n        />\n      )}\n      {recordStatus === 'unpublished' && (\n        <MessageBox\n          message=\"The record has been unpublished while in edit mode!\"\n          type=\"warning\"\n        />\n      )}\n      <h1> {header} </h1>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Title </label>\n        <div className=\"uk-form-controls\">\n          <input\n            className={\n              'uk-form-width-large uk-input ' +\n              (validationErrors.title && 'uk-form-danger')\n            }\n            type=\"text\"\n            value={title}\n            onChange={(e) => {\n              clearTitleError()\n              setTitle(e.target.value)\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label htmlFor=\"file\" className=\"uk-form-label\">\n          {' '}\n          File{' '}\n        </label>\n        {shouldKeepFile ? (\n          <FileView fileName={fileName} attachmentType={attachmentType} />\n        ) : (\n          <FileInput\n            fileName={fileName}\n            attachmentType={attachmentType}\n            onChange={(e) => {\n              setFile(e.target.files[0])\n            }}\n          />\n        )}\n        {hasFile && (\n          <div className=\"uk-form-controls\">\n            <button\n              className=\"uk-button uk-button-secondary uk-margin-top\"\n              onClick={(e) => {\n                e.preventDefault()\n                setShouldKeepFile(!shouldKeepFile)\n              }}\n            >\n              {shouldKeepFile ? 'Remove File' : 'Undo'}\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Content </label>\n        <div className=\"uk-form-controls\">\n          <textarea\n            className=\"uk-form-width-large uk-textarea\"\n            value={content}\n            onChange={(e) => {\n              setContent(e.target.value)\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Date </label>\n        <div className=\"uk-form-controls\">\n          <input\n            className={\n              'uk-form-width-large uk-input ' +\n              (validationErrors.date && 'uk-form-danger')\n            }\n            type=\"date\"\n            value={date}\n            onChange={(e) => {\n              clearDateError()\n              setDate(e.target.value)\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Origin </label>\n        <div className=\"uk-form-controls\">\n          <input\n            className=\"uk-form-width-large uk-input\"\n            type=\"text\"\n            value={origin}\n            onChange={(e) => {\n              setOrigin(e.target.value)\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Author </label>\n        <div className=\"uk-form-controls\">\n          <input\n            className=\"uk-form-width-large uk-input\"\n            type=\"text\"\n            value={author}\n            onChange={(e) => {\n              setAuthor(e.target.value)\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Record Type </label>\n        <div className=\"uk-form-controls\">\n          <select\n            className={\n              'uk-form-width-large uk-select ' +\n              (validationErrors.recordType && 'uk-form-danger')\n            }\n            value={recordType}\n            onChange={(e) => {\n              clearRecordTypeError()\n              setRecordType(e.target.value)\n            }}\n          >\n            <option value=\"\"> No Record Type </option>\n            {props.recordTypes.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Source Archive </label>\n        <div className=\"uk-form-controls\">\n          <select\n            className={\n              'uk-form-width-large uk-select ' +\n              (validationErrors.sourceArchive && 'uk-form-danger')\n            }\n            value={sourceArchive}\n            onChange={(e) => {\n              clearSourceArchiveError()\n              setSourceArchive(e.target.value)\n            }}\n          >\n            <option value=\"\"> No Source Archive </option>\n            {props.sourceArchives.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Collections </label>\n        <div className=\"uk-form-controls uk-form-controls-text\">\n          <div>\n            {validationErrors.collections && (\n              <ValidationError error={validationErrors.collections} />\n            )}\n          </div>\n\n          <div className=\"uk-grid-small uk-child-width-1-2 uk-grid\">\n            {props.collections.map(({ id, name }) => {\n              return (\n                <label key={id}>\n                  <input\n                    className=\"uk-checkbox\"\n                    type=\"checkbox\"\n                    key={id}\n                    name=\"collections\"\n                    value={id}\n                    checked={collections.includes(id)}\n                    onChange={() => {\n                      clearCollectionsError()\n                      handleCollection(id)\n                    }}\n                  />\n                  &nbsp;&nbsp; {name}\n                </label>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"uk-form-width-large\">\n        <input\n          className=\"uk-button uk-button-default uk-margin-top uk-margin-right\"\n          onClick={() => {\n            handleSubmit(recordStatus)\n          }}\n          type=\"button\"\n          value=\"Save\"\n        />\n        {!newRecord && recordStatus !== IN_PROGRESS && (\n          <input\n            className=\"uk-button uk-button-primary uk-margin-top\"\n            onClick={() => {\n              handleSubmit(PUBLISHED)\n            }}\n            type=\"button\"\n            value=\"Save &amp; Publish\"\n          />\n        )}\n        {(newRecord || recordStatus === IN_PROGRESS) && (\n          <input\n            className=\"uk-button uk-button-primary uk-margin-top\"\n            onClick={() => {\n              handleSubmit(PENDING_APPROVAL)\n            }}\n            type=\"button\"\n            value=\"Submit for Approval\"\n          />\n        )}\n      </div>\n    </form>\n  )\n}\n\nexport default RecordForm\n","import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { createUser, updateUser, getUser, getUserRoles } from '../api.js'\n\nimport MessageBox from '../MessageBox.js'\n\n// capitalize a string\nfunction capitalize(s) {\n  if (s.length > 0) {\n    return s[0].toUpperCase() + s.slice(1)\n  }\n  return s\n}\n\nconst EDITOR = 1\nconst PUBLISHER = 2\nconst ADMIN = 3\n\nfunction ToggleButton(props) {\n  return (\n    <button\n      onClick={(e) => {\n        e.preventDefault()\n        props.toggle(!props.on)    \n      }}\n    >\n      {props.on ? props.onText : props.offText}\n    </button>\n  )\n}\n\nfunction UserForm() {\n\n  const { id } = useParams() \n  const isNewUser = id === undefined \n  console.log(\"Id is:\", id)\n  console.log(\"Is New Record\", isNewUser)\n\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [disableUsername, setDisableUsername] = useState(false)\n  const [disablePassword, setDisablePassword] = useState(false)\n\n  const [roleId, setRoleId] = useState(EDITOR)\n\n  const [roles, setRoles] = useState([])\n\n  const [error, setError] = useState(null)\n  const [message, setMessage] = useState(null)\n\n  const clearForm = () => {\n    setFirstName('')\n    setLastName('')\n    setUsername('')\n    setPassword('')\n    setRoleId(1)\n  }\n\n  useEffect(() => {\n    if (!isNewUser) {\n      console.log(\"Getting data for user: \", id)\n      getUser(id).then((data) => {\n        if (data.user) {\n          console.log(\"Got user data\")\n          setFirstName(data.user.firstName)\n          setLastName(data.user.lastName)\n          setUsername(data.user.username)\n\n          if (data.user.role === \"editor\") {\n            setRoleId(EDITOR)\n          } else if (data.user.role === \"publisher\") {\n            setRoleId(PUBLISHER)\n          } else if (data.user.role === \"admin\") {\n            setRoleId(ADMIN)\n          }\n\n          setDisableUsername(true)\n          setDisablePassword(true) \n        }\n      })\n    }\n    getUserRoles().then((data) => {\n      if (data.roles) {\n        setRoles(data.roles)\n      }\n    })\n  }, [id, isNewUser])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const userData = { firstName, lastName, username, password, roleId }\n    if (isNewUser) {\n      createUser(userData).then((res) => {\n        if (res.success) {\n          setMessage(res.success)\n          clearForm()\n        } else {\n          setError(res.error)\n        }\n      })\n    } else {\n      const userData = { firstName, lastName, roleId } \n      if (!disableUsername) {\n        userData['username'] = username\n      } \n     \n      // Assuming that if they are changing password \n      // something is there. A better solution would be\n      // to have validation. Can be changed later\n      if (!disablePassword && password.length !== 0) {\n        userData['password'] = password\n      }\n\n      updateUser(id, userData).then((res) => {\n        if (res.success) {\n          setMessage(res.success)\n        } else {\n          setError(res.error)\n        }\n      })\n    }\n  }\n\n  const changeFirstName = (event) => {\n    setFirstName(event.target.value)\n  }\n\n  const changeLastName = (event) => {\n    setLastName(event.target.value)\n  }\n\n  const changeUsername = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const changePassword = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const changeRole = (event) => {\n    const roleId = parseInt(event.target.value)\n    if (isNaN(roleId)) {\n      setRoleId(1)\n    } else {\n      setRoleId(roleId)\n    }\n  }\n\n  return (\n    <form\n      className=\"uk-form-stacked uk-form-width-large uk-margin-top\"\n      onSubmit={handleSubmit}\n    >\n      {message && (\n        <MessageBox\n          onClick={() => {\n            setMessage(null)\n          }}\n          message={message}\n          type=\"success\"\n        />\n      )}\n      {error && (\n        <MessageBox\n          onClick={() => {\n            setError(null)\n          }}\n          message={error}\n          type=\"error\"\n        />\n      )}\n\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">First Name</label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"text\"\n          name=\"firstName\"\n          onChange={changeFirstName}\n          value={firstName}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">Last Name</label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"text\"\n          name=\"lastName\"\n          onChange={changeLastName}\n          value={lastName}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">Username</label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"text\"\n          name=\"username\"\n          onChange={changeUsername}\n          value={username}\n          disabled={disableUsername}\n        />\n        {isNewUser === false && \n          <ToggleButton \n            offText=\"lock username\"\n            onText=\"change username\"\n            on={disableUsername} \n            toggle={setDisableUsername} \n          />\n        }\n      </div>\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">Password</label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"password\"\n          name=\"password\"\n          onChange={changePassword}\n          value={password}\n          disabled={disablePassword}\n        />\n        {isNewUser === false && \n          <ToggleButton \n            offText=\"lock password\"\n            onText=\"change password\"\n            on={disablePassword} \n            toggle={setDisablePassword} \n          />\n        }\n      </div>\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">Role</label>\n        <select className=\"uk-select\" value={roleId} onChange={changeRole}>\n          {roles.length !== 0 &&\n            roles.map(({ id, name }) => (\n              <option value={id} key={id}>\n                {' '}\n                {capitalize(name)}{' '}\n              </option>\n            ))}\n        </select>\n      </div>\n      <input\n        className=\"uk-button uk-button-primary uk-margin-top\"\n        type=\"submit\"\n        value={isNewUser ? \"Create User\" : \"Update User\"}\n      />\n    </form>\n  )\n}\n\nexport default UserForm\n","import { Link } from 'react-router-dom'\nimport { getUsers, disableUser, enableUser } from '../api'\nimport { useState, useEffect } from 'react'\nimport { UrlFor } from '../routes.js'\nimport { useAuth } from '../auth.js'\n\nfunction UserRow(props) {\n  const auth = useAuth()\n  const { id, firstName, lastName, username, role, active } = props\n\n  const handleStatusColor = (active) => {\n    if (!active) {\n      return 'uk-label uk-label-warning'\n    } else {\n      return 'uk-label uk-label-success'\n    }\n  }\n\n  return (\n    <tr>\n      <td>\n        <Link\n          to={UrlFor('editUser', { id })}\n          className=\"uk-icon-link uk-margin-small-right\"\n          uk-icon=\"file-edit\"\n        ></Link>\n      </td>\n      <td>\n        {auth.user.username !== username && (\n          <button\n            onClick={props.changeStatus}\n            className=\"uk-icon-link uk-margin-small-right\"\n            uk-icon={active ? 'trash' : 'refresh'}\n          ></button>\n        )}\n      </td>\n      <td>{lastName}</td>\n      <td>{firstName}</td>\n      <td>{username}</td>\n      <td>{role}</td>\n      <td>\n        <span className={handleStatusColor(active)}>\n          {active ? 'Active' : 'Inactive'}\n        </span>\n      </td>\n    </tr>\n  )\n}\n\nexport default function UserListings(props) {\n  const [users, setUsers] = useState([])\n\n  const toggleStatus = (userId) => {\n    let active = true\n    const updatedUsers = users.map((user) => {\n      if (user.id === userId) {\n        user.active = !user.active\n        active = !user.active\n        return user\n      } else {\n        return user\n      }\n    })\n    if (active) {\n      disableUser(userId)\n    } else {\n      enableUser(userId)\n    }\n    setUsers(updatedUsers)\n  }\n\n  useEffect(() => {\n    getUsers().then((data) => {\n      if (data.users) {\n        setUsers(data.users)\n      }\n    })\n  }, [])\n\n  return (\n    <div>\n      <Link\n        to={UrlFor('addUser')}\n        className=\"uk-button uk-button-primary uk-margin-right\"\n      >\n        {' '}\n        Add New User{' '}\n      </Link>\n\n      <table className=\"uk-table uk-table-middle uk-table-divider uk-table-hover uk-margin-medium\">\n        <thead>\n          <tr>\n            <th className=\"uk-table-small\"></th>\n            <th className=\"uk-table-small\"></th>\n            <th className=\"uk-width-small\">Last Name</th>\n            <th>First Name</th>\n            <th>Username</th>\n            <th>Role</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(({ id, firstName, lastName, username, role, active }) => (\n            <UserRow\n              id={id}\n              firstName={firstName}\n              lastName={lastName}\n              username={username}\n              role={role}\n              active={active}\n              changeStatus={() => {\n                toggleStatus(id)\n              }}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import { useState } from 'react'\n\n// Each row has a single column name.\n// You can click on the edit button to\n// edit the name on the row and click\n// save to save changes to the database.\n// Only one row can be edited at a time\nfunction Row(props) {\n  const { name, editable } = props\n\n  return (\n    <tr>\n      <td>\n        {editable ? (\n          <input\n            type=\"text\"\n            className=\"uk-input\"\n            value={name}\n            onChange={props.onChange}\n            autoFocus\n          />\n        ) : (\n          <> {name} </>\n        )}\n      </td>\n\n      <td align=\"right\">\n        {editable ? (\n          <button className=\"uk-button\" onClick={props.onClickSave}>\n            Save\n          </button>\n        ) : (\n          <button className=\"uk-button\" onClick={props.onClickEdit}>\n            Edit\n          </button>\n        )}\n      </td>\n    </tr>\n  )\n}\n\n// Props:\n// - handleAdd: function that is used to add data to the table\n//   Called when you click the add button.\n//   Given the name being added as an argument\n// - handleUpdate: function that is used to update a row in the table\n//   Called when you click save on a row that you were edititng\n//   Given the id and the name of the row you were editing\n// - handleChange: function that is called when you edit data on a row\n//   Given to the id and the name of the row you were editing\n// - rows: List of rows to display. Expects the list to be nonempty\nexport default function EditableNameTable(props) {\n  // The top row. Used to add new entries to the table\n  const [name, setName] = useState('')\n\n  // The id of the row currently being edited\n  const [editId, setEditId] = useState(-1)\n\n  return (\n    <div>\n      <h2> {props.title} </h2>\n      <table className=\"uk-table uk-table-middle uk-table-divider uk-table-hover uk-margin-medium\">\n        <thead>\n          <tr>\n            <th className=\"uk-table-large\">Name</th>\n            <th className=\"uk-table-small\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <input\n                type=\"text\"\n                className=\"uk-input\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                autoFocus\n              />\n            </td>\n            <td align=\"right\">\n              <button\n                className=\"uk-button uk-button-primary\"\n                onClick={() => {\n                  if (props.handleAdd(name)) {\n                    setName('')\n                  }\n                }}\n              >\n                Add\n              </button>\n            </td>\n          </tr>\n          {props.rows.map(({ id, name }) => (\n            <Row\n              id={id}\n              key={id}\n              name={name}\n              editable={id === editId}\n              onChange={(e) => {\n                props.handleChange(id, e.target.value)\n              }}\n              onClickSave={() => {\n                if (props.handleUpdate(id, name)) {\n                  setEditId(-1)\n                }\n              }}\n              onClickEdit={() => setEditId(id)}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import {useState, useEffect} from 'react'\nimport {getSourceArchives, addSourceArchive, updateSourceArchive} from '../api'\nimport EditableNameTable from './EditableNameTable'\n\n\nexport default function SourceArchiveListings(props) {\n  const [sourceArchives, setSourceArchives] = useState([]) \n\n  const handleAdd = (name) => {\n    if (name.trim().length === 0) {\n      console.log(\"Name cannot be empty\") \n    }\n\n    return addSourceArchive(name).then((data) => {\n      if (data.success) {\n        console.log(data.success)\n        const s = {id: data.id, name: name}\n        setSourceArchives(sourceArchives.concat([s]))\n        return true\n      } else {\n        console.log(data.error)\n        return false\n      }\n    }).then(result => result)\n  }\n\n  const handleChange = (id, name) => {\n    setSourceArchives(sourceArchives.map(s => {\n      if (id === s.id) {\n        return Object.assign(s, {name})\n      } else {\n        return s\n      }\n    }))\n  }\n\n\n  const handleUpdate = (id, name) => {\n    return updateSourceArchive(id, name).then((data) => {\n      if (data.success) {\n        console.log(data.success)\n        return true\n      } else {\n        console.log(data.error)\n        return false\n      }\n    }).then(result => result)\n  }\n\n  useEffect(() => {\n    getSourceArchives().then((data) => {\n      if (data.sourceArchives) {\n        setSourceArchives(data.sourceArchives)\n      }\n    })\n  }, [])\n\n  return (\n    <EditableNameTable\n      title={\"Manage Source Archives\"}\n      rows={sourceArchives}\n      handleAdd={handleAdd}\n      handleChange={handleChange}\n      handleUpdate={handleUpdate} />\n    \n  )\n}\n","import {useState, useEffect} from 'react'\nimport {getCollections, addCollection, updateCollection} from '../api'\nimport EditableNameTable from './EditableNameTable'\n\n\nexport default function CollectionListings(props) {\n  const [collections, setCollections] = useState([]) \n\n  const handleAdd = (name) => {\n    if (name.trim().length === 0) {\n      console.log(\"Name cannot be empty\") \n    }\n\n    return addCollection(name).then((data) => {\n      if (data.success) {\n        console.log(data.success)\n        const s = {id: data.id, name: name}\n        setCollections(collections.concat([s]))\n        return true\n      } else {\n        console.log(data.error)\n        return false\n      }\n    }).then(result => result)\n  }\n\n  const handleChange = (id, name) => {\n    setCollections(collections.map(s => {\n      if (id === s.id) {\n        return Object.assign(s, {name})\n      } else {\n        return s\n      }\n    }))\n  }\n\n\n  const handleUpdate = (id, name) => {\n    return updateCollection(id, name).then((data) => {\n      if (data.success) {\n        console.log(data.success)\n        return true\n      } else {\n        console.log(data.error)\n        return false\n      }\n    }).then(result => result)\n  }\n\n  useEffect(() => {\n    getCollections().then((data) => {\n      if (data.collections) {\n        setCollections(data.collections)\n      }\n    })\n  }, [])\n\n  return (\n    <EditableNameTable\n      title={\"Manage Collections\"}\n      rows={collections}\n      handleAdd={handleAdd}\n      handleChange={handleChange}\n      handleUpdate={handleUpdate} />\n  )\n}\n","import {useState, useEffect} from 'react'\nimport {getRecordTypes, addRecordType, updateRecordType} from '../api'\nimport EditableNameTable from './EditableNameTable'\n\n\nexport default function RecordTypeListings(props) {\n  const [recordTypes, setRecordTypes] = useState([]) \n\n  const handleAdd = (name) => {\n    if (name.trim().length === 0) {\n      console.log(\"Name cannot be empty\") \n    }\n\n    return addRecordType(name).then((data) => {\n      if (data.success) {\n        console.log(data.success)\n        const s = {id: data.id, name: name}\n        setRecordTypes(recordTypes.concat([s]))\n        return true\n      } else {\n        console.log(data.error)\n        return false\n      }\n    }).then(result => result)\n  }\n\n  const handleChange = (id, name) => {\n    setRecordTypes(recordTypes.map(s => {\n      if (id === s.id) {\n        return Object.assign(s, {name})\n      } else {\n        return s\n      }\n    }))\n  }\n\n\n  const handleUpdate = (id, name) => {\n    return updateRecordType(id, name).then((data) => {\n      if (data.success) {\n        console.log(data.success)\n        return true\n      } else {\n        console.log(data.error)\n        return false\n      }\n    }).then(result => result)\n  }\n\n  useEffect(() => {\n    getRecordTypes().then((data) => {\n      if (data.recordTypes) {\n        setRecordTypes(data.recordTypes)\n      }\n    })\n  }, [])\n\n  return (\n    <EditableNameTable\n      title={\"Manage Record Types\"}\n      rows={recordTypes}\n      handleAdd={handleAdd}\n      handleChange={handleChange}\n      handleUpdate={handleUpdate} />\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { Switch, Link, Route, Redirect } from 'react-router-dom'\nimport { UrlFor } from './routes'\n\nimport Header from './Header'\nimport PaginationButtons from './PaginationButton'\nimport SearchForm from './SearchForm'\nimport RecordTable from './RecordTable'\nimport RecordDetail from './RecordDetail'\nimport LoginForm from './LoginForm'\n\nimport Dashboard from './Dashboard'\n\nimport { getPublicListingData } from './api'\nimport { useSearchParams } from './hooks'\nimport { useAuth, PrivateRoute } from './auth.js'\n\nimport RecordForm from './admin/RecordForm'\nimport UserForm from './admin/UserForm'\nimport UserListings from './admin/UserListings'\nimport SourceArchiveListings from './admin/SourceArchiveListings'\nimport CollectionListings from './admin/CollectionListings'\nimport RecordTypeListings from './admin/RecordTypeListings'\n\nfunction getOffset(searchParameters) {\n  let offsetParam = searchParameters.get('offset')\n  if (offsetParam === null) {\n    return 0\n  }\n  let offset = parseInt(offsetParam)\n  if (isNaN(offset)) {\n    return 0\n  }\n\n  return offset\n}\n\nfunction App() {\n  const auth = useAuth()\n\n  const searchParameters = useSearchParams()\n  const offset = getOffset(searchParameters)\n\n  const [records, setRecords] = useState(null)\n  const [years, setYears] = useState([])\n  const [pages, setPages] = useState(null)\n  const [recordTypes, setRecordTypes] = useState([])\n  const [collections, setCollections] = useState([])\n  const [collectionToId, setCollectionToId] = useState({})\n  const [sourceArchives, setSourceArchives] = useState([])\n  const [recordStatus, setRecordStatus] = useState([])\n\n  // stores whether a search was run or not\n  // used to show different error messages in record table\n  const [searched, setSearched] = useState(false)\n\n  const handleSearch = (searchParams) => {\n    const {\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n    } = searchParams\n    const params = {\n      offset,\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n    }\n    getPublicListingData(params).then(({ records, pages, years }) => {\n      setRecords(records)\n      setPages(pages)\n      setYears(years)\n      setSearched(true)\n    })\n  }\n\n  useEffect(() => {\n    getPublicListingData({ offset }).then(\n      ({\n        records,\n        pages,\n        years,\n        collections,\n        sourceArchives,\n        recordTypes,\n        recordStatus,\n      }) => {\n        setRecords(records)\n        setPages(pages)\n        setYears(years)\n        setCollections(collections.collections)\n        setCollectionToId(collections.collectionToId)\n        setSourceArchives(sourceArchives)\n        setRecordTypes(recordTypes)\n        setRecordStatus(recordStatus)\n      },\n    )\n  }, [offset])\n\n  return (\n    <div className=\"uk-marign-top\">\n      <header>\n        <h1> History Database </h1>\n        <nav className=\"uk-navbar\">\n          <div className=\"uk-nav-bar-left\">\n            <ul className=\"uk-navbar-nav\">\n              {auth.user ? (\n                <li>\n                  <Link to={UrlFor('adminHome')}> Dashboard </Link>\n                </li>\n              ) : (\n                <li>\n                  <Link to={UrlFor('home')}> Home </Link>\n                </li>\n              )}\n            </ul>\n          </div>\n          <div className=\"uk-navbar-right\">\n            <ul className=\"uk-navbar-nav\">\n              {auth.user ? (\n                <li>\n                  <Link\n                    to={UrlFor('logout')}\n                    onClick={() => {\n                      auth.signout()\n                    }}\n                  >\n                    {' '}\n                    Logout{' '}\n                  </Link>\n                </li>\n              ) : (\n                <li>\n                  <Link to={UrlFor('login')}> Login </Link>\n                </li>\n              )}\n            </ul>\n          </div>\n        </nav>\n      </header>\n\n      <Switch>\n        <Route path={UrlFor('viewRecord')}>\n          <Header>\n            <h1 className=\"uk-text-lead\"> History Record </h1>\n          </Header>\n\n          <RecordDetail records={records} />\n        </Route>\n\n        <Route path={UrlFor('login')}>\n          <LoginForm />\n        </Route>\n\n        <PrivateRoute path={UrlFor('newRecord')}>\n          <RecordForm\n            recordTypes={recordTypes}\n            collections={collections}\n            sourceArchives={sourceArchives}\n            recordStatus={recordStatus}\n            buttonText=\"Add\"\n          />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('editRecord')}>\n          <RecordForm\n            recordTypes={recordTypes}\n            collections={collections}\n            sourceArchives={sourceArchives}\n            recordStatus={recordStatus}\n            collectionToId={collectionToId}\n            buttonText=\"Update\"\n          />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('adminHome')}>\n          <Dashboard records={records} />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('addUser')}>\n          <UserForm />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('editUser')}>\n          <UserForm /> \n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('showSourceArchives')}>\n          <SourceArchiveListings />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('showCollections')}>\n          <CollectionListings />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('showRecordTypes')}>\n          <RecordTypeListings />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('showUsers')}>\n          <UserListings />\n        </PrivateRoute>\n        <Route path={UrlFor('logout')}>\n          <Redirect to={UrlFor('home')} />\n        </Route>\n\n        <Route path={UrlFor('home')}>\n          {auth.user ? (\n            <Redirect to={UrlFor('adminHome')} />\n          ) : (\n            <>\n              <Header>\n                <h1 className=\"uk-text-lead\"> History Listing </h1>\n                <SearchForm\n                  years={!years ? [] : years}\n                  recordTypes={recordTypes}\n                  collections={collections}\n                  sourceArchives={sourceArchives}\n                  onSubmit={handleSearch}\n                />\n                <PaginationButtons\n                  currentPage={!offset ? 0 : offset}\n                  pages={pages}\n                />\n              </Header>\n              <RecordTable searched={searched} records={records} />\n            </>\n         )}\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'; \n\nimport './index.css';\nimport App from './App';\nimport {ProvideAuth} from './auth';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <ProvideAuth> \n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </ProvideAuth>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}