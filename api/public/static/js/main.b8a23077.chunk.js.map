{"version":3,"sources":["routes.js","Header.js","PaginationButton.js","SearchForm.js","RecordRow.js","RecordTable.js","api.js","RecordDetail.js","auth.js","MessageBox.js","LoginForm.js","hooks.js","admin/RecordRow.js","admin/RecordTable.js","Dashboard.js","admin/RecordForm.js","admin/UserForm.js","admin/UserListings.js","admin/SourceArchiveListings.js","App.js","reportWebVitals.js","index.js"],"names":["routes","adminHome","home","login","logout","showUsers","addUser","showSourceArchives","addSourceArchive","newRecord","editRecord","url","params","id","viewRecord","UrlFor","name","route","undefined","Error","Header","props","className","children","PrevButton","currentPage","type","href","uk-pagination-previous","NextButton","pages","uk-pagination-next","PaginationButtons","style","height","padding","borderWidth","SearchForm","useState","query","setQuery","searchYear","setSearchYear","searchCollection","setSearchCollection","searchSourceArchive","setSearchSourceArchive","searchRecordType","setSearchRecordType","searchStatus","setSearchStatus","showAdvancedSearch","setShowAdvancedSearch","advancedSearchClassName","advancedSearchOptionsClass","user","role","onSubmit","e","preventDefault","performSearch","uk-grid","value","placeholder","onChange","target","years","map","year","uk-icon","uk-tooltip","onClick","recordTypes","sourceArchives","collections","status","RecordRow","date","title","to","NoResultsPage","PublicListings","records","recordType","RecordTable","searched","buildURLWithQueryParameters","baseUri","queryParameters","offset","push","encodeURIComponent","searchRecordStatus","getQueryParameters","length","join","getListingData","uri","fetch","then","res","json","getPublicListingData","a","method","mode","cache","credentials","response","username","password","data","headers","body","JSON","stringify","userData","userId","recordToForm","record","formData","FormData","append","content","file","author","sourceArchive","recordStatus","recordId","recordStatusId","getValueOrDefault","defaultValue","Loading","TitleRow","PdfRow","src","width","ImageRow","alt","FileAttachmentRow","console","log","attachmentType","fileName","ContentRow","text","formatDate","matches","match","month","day","DateRow","OriginRow","origin","AuthorRow","RecordTypeRow","SourceArchiveRow","CollectionRow","split","getCollectionArray","collection","Detail","RecordDetail","useParams","setRecord","useEffect","getPublicRecordByID","authContext","createContext","useAuth","useContext","useProvideAuth","setUser","signin","onError","result","success","signout","ProvideAuth","auth","Provider","PrivateRoute","rest","render","MessageBox","messageClass","uk-alert","uk-close","message","LoginForm","setUsername","setPassword","error","setError","event","useSearchParams","URLSearchParams","useLocation","search","handleStatusColor","editUrl","onDelete","deleted","AdminListings","Dashboard","searchParameters","offsetParam","get","parseInt","isNaN","getOffset","setRecords","setYears","setPages","setRecordTypes","setCollections","setSourceArchives","setRecordStatus","setSearched","searchParams","updatedRecords","r","deleteRecord","restoreRecord","blank","s","trim","ValidationError","RecordForm","setTitle","setContent","setFile","setDate","setOrigin","setAuthor","setRecordType","setSourceArchive","setMessage","validationErrors","setValidationErrors","clearValidationError","fieldName","errors","Object","assign","clearTitleError","clearDateError","clearRecordTypeError","clearSourceArchiveError","clearCollectionsError","validateForm","valid","getRecordByID","changeRecordStatus","c","forEach","col","collectionToId","parseIntOrError","str","n","handleSubmit","saveRecord","updateRecord","header","encType","htmlFor","accept","files","checked","includes","filter","i","concat","handleCollection","UserForm","firstName","setFirstName","lastName","setLastName","roleId","setRoleId","roles","setRoles","getUserRoles","createUser","charAt","toLowerCase","toUpperCase","slice","UserRow","disableUser","UserListings","users","setUsers","getUsers","SourceArchiveListings","App","setCollectionToId","path","buttonText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8a23077.chunk.js","sourcesContent":["const routes = {\n  adminHome: '/admin',\n  home: '/',\n  login: '/login',\n  logout: '/logout',\n  showUsers: '/users',\n  addUser: '/adduser',\n  showSourceArchives: '/sourceArchives',\n  addSourceArchive: '/addSourceArchive',\n  newRecord: '/record/new',\n  editRecord: {\n    url: '/record/edit',\n    params: {\n      id: ':id',\n    },\n  },\n  viewRecord: {\n    url: '/record/view',\n    params: {\n      id: ':id',\n    },\n  },\n}\n\nexport function UrlFor(name, params) {\n  let route = ''\n\n  if (typeof routes[name] === 'string') {\n    route = routes[name]\n  } else {\n    if (params !== undefined) {\n      route = routes[name].url + '/' + params.id\n    } else {\n      route = routes[name].url + '/' + routes[name].params.id\n    }\n  }\n\n  if (route === undefined) {\n    throw new Error(`Route doesn't exist: ${name}`)\n  }\n\n  return route\n}\n","\nexport default function Header(props) {\n   return (\n    <div className=\"uk-margin-top\">\n     {props.children}\n    </div>\n   )\n}\n","function PrevButton(props) {\n  if (props.currentPage === 0) {\n    return null\n  }\n\n  const type = props.type ? props.type : ''\n  const href = `/${type}?offset=${props.currentPage - 1}`\n  return (\n    <a href={href}>\n      <span\n        className=\"uk-margin-small-right\"\n        uk-pagination-previous=\"true\"\n      ></span>\n      Previous\n    </a>\n  )\n}\n\nfunction NextButton(props) {\n  if (props.currentPage >= props.pages) {\n    return null\n  }\n\n  const type = props.type ? props.type : ''\n  const href = `/${type}?offset=${props.currentPage + 1}`\n  return (\n    <a href={href}>\n      Next\n      <span className=\"uk-margin-small-left\" uk-pagination-next=\"true\"></span>\n    </a>\n  )\n}\n\nexport default function PaginationButtons(props) {\n  if (props.pages === null) {\n    return null\n  } else {\n    return (\n      <ul className=\"uk-pagination uk-margin-large-top\">\n        <li>\n          <PrevButton currentPage={props.currentPage} type={props.type} />\n        </li>\n        <li>\n          <hr\n            className=\"uk-divider-vertical\"\n            style={{ height: '30px', padding: '4px 0', borderWidth: '2px' }}\n          />\n        </li>\n        <li>\n          <NextButton\n            currentPage={props.currentPage}\n            pages={props.pages}\n            type={props.type}\n          />\n        </li>\n      </ul>\n    )\n  }\n}\n","import './SearchForm.css'\nimport { useState } from 'react'\n\nexport default function SearchForm(props) {\n  const [query, setQuery] = useState('')\n  const [searchYear, setSearchYear] = useState('')\n  const [searchCollection, setSearchCollection] = useState('')\n  const [searchSourceArchive, setSearchSourceArchive] = useState('')\n  const [searchRecordType, setSearchRecordType] = useState('')\n  const [searchStatus, setSearchStatus] = useState('')\n\n  const [showAdvancedSearch, setShowAdvancedSearch] = useState(false)\n  const performSearch = () => {\n    const params = {\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n      searchStatus,\n    }\n    props.onSubmit(params)\n  }\n  const clearSearchFields = () => {\n    setQuery('')\n    setSearchYear('')\n    setSearchCollection('')\n    setSearchSourceArchive('')\n    setSearchRecordType('')\n    setSearchStatus('')\n  }\n  const show = showAdvancedSearch ? 'show' : ''\n  const advancedSearchClassName = `advancedSearchOptions uk-grid-small ${show}`\n\n  // If user is an admin\n  const advancedSearchOptionsClass =\n    props.user !== undefined && props.user.role !== 'editor'\n      ? 'uk-width-1-4@s'\n      : 'uk-width-1-3@s'\n\n  return (\n    <form\n      className=\"uk-margin-large-top\"\n      onSubmit={(e) => {\n        e.preventDefault()\n        performSearch()\n      }}\n    >\n      <div className=\"searchBar uk-grid-small\" uk-grid=\"true\">\n        <div className=\"uk-width-expand@s\">\n          <input\n            className=\"uk-input\"\n            value={query}\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={(e) => {\n              setQuery(e.target.value)\n            }}\n          />\n        </div>\n\n        <div className=\"uk-width-1-3@s\">\n          <select\n            className=\"uk-select\"\n            value={searchYear}\n            onChange={(e) => {\n              setSearchYear(e.target.value)\n            }}\n          >\n            <option value=\"\">Year</option>\n            {props.years.map((year) => (\n              <option key={year} value={year}>\n                {' '}\n                {year}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div\n          className=\"advancedSearchButton uk-width-auto@s uk-grid-small\"\n          uk-grid=\"true\"\n        >\n          <div className=\"uk-width-auto\">\n            <button\n              className=\"uk-button uk-button-default\"\n              uk-icon=\"more\"\n              uk-tooltip=\"Advanced Search Options\"\n              onClick={() => {\n                setShowAdvancedSearch(!showAdvancedSearch)\n              }}\n            ></button>\n          </div>\n\n          <div className=\"uk-width-auto\">\n            <button\n              className=\"uk-button uk-button-default\"\n              type=\"submit\"\n              uk-icon=\"refresh\"\n              uk-tooltip=\"Clear Search\"\n              onClick={() => {\n                clearSearchFields()\n              }}\n            ></button>\n          </div>\n\n          <div className=\"uk-width-auto\">\n            <button\n              className=\"uk-button uk-button-primary searchButton\"\n              type=\"submit\"\n              uk-icon=\"search\"\n              uk-tooltip=\"Search\"\n            ></button>\n          </div>\n        </div>\n      </div>\n\n      <div className={advancedSearchClassName} uk-grid=\"true\">\n        <div className={advancedSearchOptionsClass}>\n          <select\n            className=\"uk-select\"\n            value={searchRecordType}\n            onChange={(e) => {\n              setSearchRecordType(e.target.value)\n            }}\n          >\n            <option value=\"\"> Type </option>\n            {props.recordTypes.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className={advancedSearchOptionsClass}>\n          <select\n            className=\"uk-select\"\n            value={searchSourceArchive}\n            onChange={(e) => {\n              setSearchSourceArchive(e.target.value)\n            }}\n          >\n            <option value=\"\"> Source Archive </option>\n            {props.sourceArchives.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className={advancedSearchOptionsClass}>\n          <select\n            className=\"uk-select\"\n            value={searchCollection}\n            onChange={(e) => {\n              setSearchCollection(e.target.value)\n            }}\n          >\n            <option value=\"\"> Collection </option>\n            {props.collections.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {props.user !== undefined && props.user.role !== 'editor' && (\n          <div className={advancedSearchOptionsClass}>\n            <select\n              className=\"uk-select\"\n              value={searchStatus}\n              onChange={(e) => {\n                setSearchStatus(e.target.value)\n              }}\n            >\n              <option value=\"\">Status</option>\n              {props.status.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {' '}\n                  {name}{' '}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n      </div>\n    </form>\n  )\n}\n","import { Link } from 'react-router-dom'\nimport { UrlFor } from './routes'\n\nexport default function RecordRow(props) {\n  return (\n    <tr>\n      <td>{props.date}</td>\n      <td>{props.title}</td>\n      <td>{props.type}</td>\n      <td>\n        <Link\n          to={UrlFor('viewRecord', { id: props.id })}\n          className=\"uk-button uk-button-primary\"\n        >\n          {' '}\n          View{' '}\n        </Link>\n      </td>\n    </tr>\n  )\n}\n","import RecordRow from './RecordRow'\n\nfunction NoResultsPage() {\n  return <h1> Your search did not return any results. </h1>\n}\n\nfunction PublicListings(props) {\n  return (\n    <table className=\"uk-table uk-table-middle uk-table-divider uk-table-hover uk-margin-medium\">\n      <thead>\n        <tr>\n          <th className=\"uk-width-small\">Date</th>\n          <th>Title</th>\n          <th>Type</th>\n          <th className=\"uk-table-shrink\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.records.map(({ id, date, title, recordType }) => (\n          <RecordRow\n            id={id}\n            key={id}\n            date={date}\n            title={title}\n            type={recordType.name}\n          />\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default function RecordTable(props) {\n  if (props.records === null) {\n    if (props.searched) {\n      return <NoResultsPage />\n    } else {\n      return null\n    }\n  } else {\n    return <PublicListings records={props.records} />\n  }\n}\n","const getQueryParameters = (params) => {\n  const queryParameters = []\n  if (params.offset && params.offset !== null) {\n    queryParameters.push(`offset=${encodeURIComponent(params.offset)}`)\n  }\n\n  if (params.query && params.query !== '') {\n    queryParameters.push(`query=${encodeURIComponent(params.query)}`)\n  }\n\n  if (params.searchYear && params.searchYear !== '') {\n    queryParameters.push(`year=${encodeURIComponent(params.searchYear)}`)\n  }\n\n  if (params.searchCollection && params.searchCollection !== '') {\n    queryParameters.push(\n      `collection=${encodeURIComponent(params.searchCollection)}`,\n    )\n  }\n\n  if (params.searchSourceArchive && params.searchSourceArchive !== '') {\n    queryParameters.push(\n      `sourceArchive=${encodeURIComponent(params.searchSourceArchive)}`,\n    )\n  }\n\n  if (params.searchRecordType && params.searchRecordType !== '') {\n    queryParameters.push(\n      `recordType=${encodeURIComponent(params.searchRecordType)}`,\n    )\n  }\n\n  if (params.searchRecordStatus && params.searchRecordStatus !== '') {\n    queryParameters.push(\n      `recordStatus=${encodeURIComponent(params.searchRecordStatus)}`,\n    )\n  }\n  return queryParameters\n}\n\nconst buildURLWithQueryParameters = (baseUri, params) => {\n  const queryParameters = getQueryParameters(params)\n\n  if (queryParameters.length !== 0) {\n    return baseUri + `?${queryParameters.join('&')}`\n  } else {\n    return baseUri\n  }\n}\n\n// Returns listing data for dashboard.\n// Records are returned based on if the user is an editor, publisher\n// or admin\nexport function getListingData(params) {\n  const uri = buildURLWithQueryParameters('/api/records', params)\n  return fetch(uri).then((res) => res.json())\n}\n\n// Returns listing data for public users\nexport function getPublicListingData(params) {\n  const uri = buildURLWithQueryParameters('/api/public/records', params)\n  return fetch(uri).then((res) => res.json())\n}\n\nexport function getPublicRecordByID(id) {\n  return fetch(`/api/public/records/${id}`).then((res) => res.json())\n}\n\n// Retrieves a record by its id regardless of status.\n// User must be logged in\nexport async function getRecordByID(id) {\n  const response = await fetch(`/api/records/${id}`, {\n    method: 'GET',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n  })\n\n  return await response.json()\n}\n\nexport async function login(username, password) {\n  const data = { username, password }\n\n  const response = await fetch('/api/login', {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  })\n\n  return response.json()\n}\n\nexport async function logout() {\n  return fetch('/api/logout', {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n  })\n}\n\n// Returns user data for the logged in user.\n// If user is not logged in returns an error message\nexport function getUserData() {\n  return fetch(`/api/user`).then((res) => res.json())\n}\n\n// Creates a new user. User must be authenticated\n// and an admin to succeed\nexport async function createUser(userData) {\n  const response = await fetch('/api/user', {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n\n    body: JSON.stringify(userData),\n  })\n\n  return response.json()\n}\n\n// Returns a json list of users. If the user is not\n// authenticated returns a 401 unauthorized\nexport async function getUsers() {\n  const response = await fetch('/api/users', {\n    method: 'GET',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n  })\n\n  return response.json()\n}\n\n// Returns a list of user roles.\nexport async function getUserRoles() {\n  const response = await fetch('/api/user_roles', {\n    method: 'GET',\n    mode: 'same-origin',\n    cache: 'no-cache',\n  })\n\n  return response.json()\n}\n\n// Disables a user\nexport async function disableUser(userId) {\n  const response = await fetch('/api/user/disable', {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ userId }),\n  })\n  return response.json()\n}\n\nconst recordToForm = (record) =>  {\n  const formData = new FormData()\n  formData.append('title', record.title)\n  formData.append('content', record.content)\n\n  if (record.file !== null) {\n    formData.append('file', record.file)\n  }\n\n  formData.append('date', record.date)\n  formData.append('author', record.author)\n  formData.append('recordType', record.recordType)\n  formData.append('sourceArchive', record.sourceArchive)\n  formData.append('collections', record.collections)\n  formData.append('recordStatus', record.recordStatus)\n\n  return formData\n}\n\nexport async function saveRecord(record) {\n\n  const response = await fetch('/api/records', {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    body: recordToForm(record),\n  })\n\n  return response.json()\n}\n\nexport async function updateRecord(recordId, record) {\n  const response = await fetch(`/api/records/${recordId}`, {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    body: recordToForm(record),\n  })\n  return response.json()\n}\n\nexport async function changeRecordStatus(recordId, recordStatusId) {\n  const response = await fetch(`/api/records/status/${recordId}`, {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ recordId, recordStatusId }),\n  })\n  return response.json()\n}\n\nexport async function deleteRecord(recordId) {\n  const response = await fetch(`/api/records/delete/${recordId}`, {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  })\n  return response\n}\n\nexport async function restoreRecord(recordId) {\n  const response = await fetch(`/api/records/restore/${recordId}`, {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  })\n  return response\n}\n\nexport function getSourceArchives() {\n  const response = fetch('/api/sourceArchives', {\n    method: 'GET', \n    mode: 'same-origin', \n    cache: 'no-cache', \n    credentials: 'include', \n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n  return response\n}\n","import { useParams } from 'react-router-dom'; \nimport { useState, useEffect } from 'react';\nimport { getPublicRecordByID } from './api';\n\nconst getValueOrDefault = (value, defaultValue) => {\n  if (value) {\n    return value\n  } else {\n    return defaultValue;\n  }\n}\n\nfunction Loading() {\n  return <h1> Loading </h1> \n}\n\nfunction TitleRow(props) {\n  return (\n    <tr>\n      <td className=\"uk-width-medium\"><strong>Title</strong></td>\n      <td>{props.title}</td>\n    </tr>\n  )\n}\n\nfunction PdfRow(props) {\n  return (\n    <tr>\n      <td><strong> Document </strong></td>\n      <td>\n        <embed src={`/media/${props.src}`} type=\"application/pdf\" width=\"100%\" height=\"600px\" />\n      </td>\n    </tr>\n  )\n}\n\nfunction ImageRow(props) {\n  return (\n    <tr>\n      <td><strong>Image</strong></td>\n      <td><img alt={props.alt} src={`/media/${props.src}`} /></td>\n    </tr>\n  )\n}\n\nfunction FileAttachmentRow(props) {\n  console.log('FileAttachment: ', props.attachmentType)\n  if (props.attachmentType === null) {\n    return null;\n  } else if (props.attachmentType === 'document') {\n    console.log('Loading a pdf')\n    return <PdfRow src={props.fileName} />\n  } else if (props.attachmentType === 'image') {\n    return <ImageRow alt={props.title} src={props.fileName} />\n  } else {\n    return null;\n  }\n}\n\nfunction ContentRow(props) {\n  const text = props.content === \"\" ? \"No content\" : props.content; \n  return (\n    <tr>\n      <td>\n        <strong>\n          Text\n        </strong>\n      </td>\n      <td> {text} </td>\n    </tr>\n  );\n}\n\nconst formatDate = (date) => {\n  // Converts date with format yyyy-mm-dd to mm/dd/yyyy\n  // If it cannot convert, then just returns the given date\n\n  const re = /(\\d{4})-(\\d{2})-(\\d{2})/;\n  const matches = date.match(re); \n  if (matches !== null) {\n    const year = matches[1];\n    const month = matches[2];\n    const day = matches[3];\n  \n    return `${month}/${day}/${year}`;\n  } else {\n    return date;\n  }\n}\n\nfunction DateRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>\n          Date\n        </strong>\n      </td>\n      <td>{props.date === \"\" ? \"Date unknown\" : formatDate(props.date)} </td>\n    </tr>\n  );\n}\n\nfunction OriginRow(props) {\n  return (\n    <tr>\n     <td>\n      <strong>\n        Origin\n      </strong>\n     </td>\n     <td>{getValueOrDefault(props.origin, \"Origin Unknown\")}</td>\n    </tr>\n  )\n}\n\nfunction AuthorRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>\n          Author\n        </strong>\n      </td>\n      <td>{getValueOrDefault(props.author, \"Unknown\")}</td>\n    </tr>\n  );\n}\n\nfunction RecordTypeRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>\n          Type\n        </strong>\n      </td>\n      <td>{getValueOrDefault(props.recordType.name, \"Unknown\")}</td>\n    </tr>\n  );\n}\n\nfunction SourceArchiveRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>\n          Source Archive\n        </strong>\n      </td>\n      <td>{getValueOrDefault(props.sourceArchive.name, \"Unknown\")}</td>\n    </tr>\n  );\n}\n\nfunction getCollectionArray(collections){\n  if (collections) {\n    return collections.split(';');\n  } else {\n    return [];\n  }\n}\n\nfunction CollectionRow(props) {\n  let collections = getCollectionArray(props.collections)\n\n  const collectionLabel = (collection) => {\n    return (\n      <span key={collection} className=\"uk-label\"> {collection} </span>\n    )\n  }\n  \n  if (collections.length === 0) {\n    collections.push('Collection Unknown');\n  }\n\n  return (\n    <tr>\n      <td>\n        <strong>\n          Collection\n        </strong>\n      </td>\n      <td> \n        {collections.map(collectionLabel)}\n      </td>\n    </tr>\n  );\n}\n\nfunction Detail(props) {\n  const record = props.record;\n  return (\n    <table className=\"uk-table uk-table-small uk-table-divider uk-margin-medium\">\n      <tbody>\n        <TitleRow title={record.title} />\n        <FileAttachmentRow title={record.title} attachmentType={record.attachmentType} fileName={record.fileName} />\n        <ContentRow content={record.content} />\n        <DateRow date={record.date} />\n        <OriginRow origin={record.origin} />\n        <AuthorRow author={record.author} />\n        <RecordTypeRow recordType={record.recordType} />\n        <SourceArchiveRow sourceArchive={record.sourceArchive} />\n        <CollectionRow collections={record.collections} />\n      </tbody>\n    </table>\n  );\n}\n  \n\nfunction RecordDetail(props) {\n  let {id} = useParams();\n\n  const [record, setRecord] = useState(null)\n\n  useEffect(() => {\n    getPublicRecordByID(id).then(setRecord)\n  }, [id])\n\n  if (!record) {\n    return <Loading />\n  } else {\n    return <Detail record={record} />\n  }\n}\n\nexport default RecordDetail; \n","import {useState, useEffect, useContext, createContext} from 'react';\nimport {getUserData, login, logout} from './api'; \nimport {Route, Redirect} from 'react-router-dom';\n\n\n// Code for creating authContext and hooks \n// Adapted from https://usehooks.com/useAuth/\nconst authContext = createContext();\n\n// Hook for components to get the auth object\n// and re-render when it changes\nexport function useAuth() {\n  return useContext(authContext) \n}\n\n// Provider hook that creates auth object and handles state\nexport function useProvideAuth() {\n  const [user, setUser] = useState(false) \n\n  useEffect(() => {\n    getUserData().then(json => {\n      if (json.username) {\n        setUser(json)\n      }\n    })\n  }, [])\n\n  const signin = (username, password, onError) => {\n    login(username, password).then(result => {\n      if (result.success) {\n        setUser(result.user)\n      } else {\n        onError('invalid username/password')\n      }\n    })\n  }\n\n  const signout = () => {\n    setUser(false)\n    logout()\n  }\n\n  return {\n    user, \n    signin,\n    signout,\n  }\n}\n\n// Provider component that wraps your app and makes auth object\n// available to any child component that calls useAuth()\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n\nexport function PrivateRoute({children, ...rest}) {\n  let auth = useAuth()\n\n  return (\n    <Route\n      {...rest} \n      render={() => \n        auth.user ? (\n          children\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  )\n}\n","function MessageBox(props) {\n  let messageClass = ''\n  if (props.type === 'error') {\n    messageClass = 'uk-alert-danger'\n  } else if (props.type === 'warning') {\n    messageClass = 'uk-alert-warning'\n  } else {\n    messageClass = 'uk-alert-success'\n  }\n\n  return (\n    <div uk-alert=\"true\" className={messageClass}>\n      {props.type !== 'warning' && (\n        <button\n          className=\"uk-alert-close\"\n          uk-close=\"true\"\n          onClick={props.onClick}\n        ></button>\n      )}\n      <p>{props.message}</p>\n    </div>\n  )\n}\n\nexport default MessageBox\n","import { useState } from 'react'\nimport { useAuth } from './auth.js'\nimport { Redirect } from 'react-router-dom'\n\nimport MessageBox from './MessageBox.js'\n\nexport default function LoginForm(props) {\n  const auth = useAuth()\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState(null)\n\n  const changeUsername = (event) => {\n    setError(null)\n    setUsername(event.target.value)\n  }\n\n  const changePassword = (event) => {\n    setError(null)\n    setPassword(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    auth.signin(username, password, (value) => setError(value))\n  }\n\n  if (auth.user) {\n    return <Redirect to=\"/dashboard\" />\n  }\n\n  return (\n    <form\n      className=\"uk-form-stacked uk-form-width-large uk-margin-top\"\n      onSubmit={handleSubmit}\n    >\n      {error && (\n        <MessageBox\n          onClick={() => {\n            setError(null)\n          }}\n          message={error}\n          type=\"error\"\n        />\n      )}\n\n      <div>\n        <label className=\"uk-form-label\"> Username </label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"text\"\n          name=\"username\"\n          onChange={changeUsername}\n          value={username}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label\"> Password </label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"password\"\n          name=\"password\"\n          onChange={changePassword}\n          value={password}\n        />\n      </div>\n      <input\n        className=\"uk-button uk-button-primary uk-margin-top\"\n        type=\"submit\"\n        value=\"login\"\n      />\n    </form>\n  )\n}\n","import {useLocation} from 'react-router-dom';\n\nexport function useSearchParams() {\n  // Returns search Parameters from URL \n  \n  return new URLSearchParams(useLocation().search);\n}\n","import { Link } from 'react-router-dom'\nimport { UrlFor } from '../routes.js'\nimport { useAuth } from '../auth.js'\n\nfunction RecordRow(props) {\n  const auth = useAuth()\n\n  const handleStatusColor = (status) => {\n    if (status === 'unpublished') {\n      return 'uk-label uk-label-warning'\n    } else if (status === 'deleted') {\n      return 'uk-label uk-label-error'\n    } else {\n      return 'uk-label uk-label-success'\n    }\n  }\n\n  const editUrl = UrlFor('editRecord', { id: props.id })\n\n  return (\n    <tr>\n      <td>\n        <Link\n          to={editUrl}\n          className=\"uk-icon-link uk-margin-small-right\"\n          uk-icon=\"file-edit\"\n        ></Link>\n      </td>\n      {auth.user.role === 'admin' && (\n        <td>\n          <button\n            onClick={props.onDelete}\n            className=\"uk-icon-link uk-margin-small-right\"\n            uk-icon={props.deleted ? \"refresh\" : \"trash\"}\n          ></button>\n        </td>\n      )}\n      <td>{props.date}</td>\n      <td>{props.title}</td>\n      <td>\n        {props.deleted \n          ? <span className={handleStatusColor(\"deleted\")}> Deleted </span>\n          : <span className={handleStatusColor(props.status.name)}>{props.status.name}</span>\n        }\n      </td>\n    </tr>\n  )\n}\n\nexport default RecordRow\n","import RecordRow from './RecordRow'\n\nfunction NoResultsPage() {\n  return <h1> Your search did not return any results. </h1>\n}\n\nfunction AdminListings(props) {\n  return (\n    <table className=\"uk-table uk-table-middle uk-table-divider uk-table-hover uk-margin-medium\">\n      <thead>\n        <tr>\n          <th className=\"uk-table-small\"></th>\n          {props.user !== undefined && props.user.role === 'admin' && (\n            <th className=\"uk-table-small\"></th>\n          )}\n          <th className=\"uk-width-small\">Date</th>\n          <th>Title</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.records.map(({ id, date, title, recordStatus, deleted }) => (\n          <RecordRow\n            id={id}\n            key={id}\n            date={date}\n            title={title}\n            status={recordStatus}\n            deleted={deleted}\n            onDelete={() => {props.onDelete(id)}}\n          />\n        ))}\n      </tbody>\n    </table>\n  )\n\n}\n\nexport default function RecordTable(props) {\n  if (props.records === null) {\n    if (props.searched) {\n      return <NoResultsPage />\n    } else {\n      return null\n    }\n  } else {\n    return <AdminListings records={props.records} onDelete={props.onDelete}/>\n  }\n}\n","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UrlFor } from './routes'\nimport { getListingData, restoreRecord, deleteRecord } from './api'\nimport { useSearchParams } from './hooks'\nimport { useAuth } from './auth.js'\nimport AdminListings from './admin/RecordTable'\nimport SearchForm from './SearchForm'\nimport PaginationButtons from './PaginationButton'\n\nfunction getOffset(searchParameters) {\n  let offsetParam = searchParameters.get('offset')\n  if (offsetParam === null) {\n    return 0\n  }\n  let offset = parseInt(offsetParam)\n  if (isNaN(offset)) {\n    return 0\n  }\n\n  return offset\n}\n\nexport default function Dashboard() {\n  const auth = useAuth()\n  const searchParameters = useSearchParams()\n  const offset = getOffset(searchParameters)\n\n  const [records, setRecords] = useState(null)\n  const [years, setYears] = useState([])\n  const [pages, setPages] = useState(null)\n  const [recordTypes, setRecordTypes] = useState([])\n  const [collections, setCollections] = useState([])\n  const [sourceArchives, setSourceArchives] = useState([])\n  const [recordStatus, setRecordStatus] = useState([])\n\n  const [searched, setSearched] = useState(false)\n\n  const toggleDelete = function (id) {\n    let deleted = false\n    let updatedRecords = records.map((r) => { \n      if (r.id === id) {\n        r.deleted = !r.deleted\n        deleted = r.deleted\n        return r\n      } else {\n        return r\n      } \n    }) \n    if (deleted) {\n      deleteRecord(id)\n    } else {\n      restoreRecord(id)\n    }\n    setRecords(updatedRecords)\n  }\n\n  const handleSearch = (searchParams) => {\n    if (!auth.user) return\n    const {\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n      searchStatus,\n    } = searchParams\n    const params = {\n      offset,\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n      searchStatus,\n    }\n    getListingData(params).then(({ records, pages, years}) => {\n      setRecords(records)\n      setPages(pages)\n      setYears(years)\n      setSearched(true)\n    })\n  }\n\n  useEffect(() => {\n    getListingData({ offset }).then(\n      ({\n        records,\n        pages,\n        years,\n        collections,\n        sourceArchives,\n        recordTypes,\n        recordStatus,\n      }) => {\n        setRecords(records)\n        setPages(pages)\n        setYears(years)\n        setCollections(collections.collections)\n        setSourceArchives(sourceArchives)\n        setRecordTypes(recordTypes)\n        setRecordStatus(recordStatus)\n      },\n    )\n  }, [offset, auth.user])\n\n  return (\n    <>\n\n      {auth.user.role === 'admin' && (\n        <Link\n          to={UrlFor('showUsers')}\n          className=\"uk-button uk-button-default uk-margin-right\"\n        >\n          {' '}\n          Manage Users{' '}\n        </Link>\n      )}\n\n      {auth.user.role === 'admin' && (\n        <Link\n          to={UrlFor('showSourceArchives')}\n          className=\"uk-button uk-button-default uk-margin-right\"\n        >\n          {' '}\n          Manage Source Archives{' '}\n        </Link>\n      )}\n\n      <Link to={UrlFor('newRecord')} className=\"uk-button uk-button-default\">\n        {' '}\n        New Record{' '}\n      </Link>\n\n      <SearchForm\n        years={!years ? [] : years}\n        recordTypes={recordTypes}\n        collections={collections}\n        sourceArchives={sourceArchives}\n        status={recordStatus}\n        user={auth.user}\n        onSubmit={handleSearch}\n      />\n      <PaginationButtons\n        currentPage={!offset ? 0 : offset}\n        pages={pages}\n        type=\"admin\"\n      />\n\n      {/*\n       * List of pending records by default\n       * Needs to include a records status in the records\n       */}\n      <AdminListings searched={searched} records={records} user={auth.user} onDelete={toggleDelete} />\n    </>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getRecordByID, saveRecord, updateRecord, changeRecordStatus } from '../api'\n\nimport MessageBox from '../MessageBox'\n\n// Record Status \nconst IN_PROGRESS = 1\nconst PENDING_APPROVAL = 2\nconst PUBLISHED = 3\nconst UNPUBLISHED = 4\n\n// Returns true if string is blank\nfunction blank(s) {\n  return s.trim().length === 0\n}\n\nfunction ValidationError(props) {\n  return <label className=\"uk-form-danger\"> *{props.error} </label>\n}\n\nfunction RecordForm(props) {\n  let { id } = useParams()\n\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n  const [file, setFile] = useState(null)\n  const [date, setDate] = useState('')\n  const [origin, setOrigin] = useState('')\n  const [author, setAuthor] = useState('')\n\n  const [recordType, setRecordType] = useState('')\n  const [sourceArchive, setSourceArchive] = useState('')\n  const [collections, setCollections] = useState([])\n  const [recordStatus, setRecordStatus] = useState(null)\n\n  const newRecord = id === undefined\n\n  const [message, setMessage] = useState({\n    message: null,\n    type: null,\n  })\n\n  const clearForm = () => {\n    setTitle('')\n    setContent('')\n    setDate('')\n    setOrigin('')\n    setAuthor('')\n    setRecordType('')\n    setSourceArchive('')\n    setCollections([])\n  }\n\n  // Form Validation\n  const [validationErrors, setValidationErrors] = useState({\n    title: null,\n    date: null,\n    recordType: null,\n    sourceArchive: null,\n    collections: null,\n  })\n\n  // Creates a helper function to clear validation errors\n  // I am using a closure here because if I mispelled a field\n  // name I want it to throw an error right away. Using\n  // something lke\n  const clearValidationError = (fieldName) => {\n    if (validationErrors[fieldName] === undefined) {\n      throw new Error(\n        `Cannot create helper function for unknown field: ${fieldName}`,\n      )\n    }\n    return () => {\n      if (validationErrors[fieldName]) {\n        let errors = {}\n        errors[fieldName] = null\n        setValidationErrors(Object.assign(validationErrors, errors))\n      }\n    }\n  }\n\n  const clearTitleError = clearValidationError('title')\n  const clearDateError = clearValidationError('date')\n  const clearRecordTypeError = clearValidationError('recordType')\n  const clearSourceArchiveError = clearValidationError('sourceArchive')\n  const clearCollectionsError = clearValidationError('collections')\n\n  // Returns an error message if date field has an error\n  // or returns false if it is valid\n  const validateDate = () => {\n    if (blank(date)) {\n      return 'Date is required.'\n    }\n    return null\n  }\n\n  // Validates all of the fields on the form.\n  // Returns true if there are no errors and it is ok to submit\n  const validateForm = () => {\n    let valid = true\n    let errors = {}\n\n    if (blank(title)) {\n      errors.title = 'Title is required'\n      valid = false\n    }\n\n    errors.date = validateDate()\n    valid = valid && errors.date === null\n\n    if (recordType === \"\") {\n      errors.recordType = 'You need to select a record type'\n      valid = false\n    }\n\n    if (sourceArchive === \"\") {\n      errors.sourceArchive = 'You need to select a source archive'\n      valid = false\n    }\n\n    if (collections.length === 0) {\n      errors.collections = 'You need to select at least one collection'\n    }\n\n    setValidationErrors(Object.assign(validationErrors, errors))\n    return valid\n  }\n\n  useEffect(() => {\n    if (!newRecord) {\n      // Populate form fields with record\n      getRecordByID(id).then((data) => {\n        if (data.record) {\n          const r = data.record\n          setTitle(r.title)\n          setContent(r.content)\n          setDate(r.date)\n          setOrigin(r.origin)\n          setAuthor(r.author)\n\n          // Some records did not have a record type\n          // this if keeps them from crashing the site\n          if (r.recordType !== null) {\n            setRecordType(r.recordType.id)\n          }\n\n          // Some records did not have a source archive\n          // this if keeps them from crashing the site\n          if (r.sourceArchive !== null) {\n            setSourceArchive(r.sourceArchive.id)\n          }\n\n          if (r.recordStatus.id === PUBLISHED) {\n            changeRecordStatus(id, UNPUBLISHED)\n            setRecordStatus(UNPUBLISHED)\n          } else {\n            setRecordStatus(r.recordStatus.id)\n          }\n\n          let c = []\n          r.collections.split(';').forEach((col) => {\n            if (props.collectionToId[col]) {\n              c.push(props.collectionToId[col])\n            }\n          })\n          setCollections(c)\n        }\n      })\n    }\n  }, [newRecord, id, props.collectionToId])\n\n  const handleCollection = (id) => {\n    if (collections.includes(id)) {\n      setCollections(collections.filter((i) => i !== id))\n    } else {\n      setCollections(collections.concat(id))\n    }\n  }\n\n  const parseIntOrError = (str) => {\n    const n = parseInt(str)\n    if (isNaN(n)) {\n      throw new Error(`Couldn't parse int on string: ${str}`)\n    }\n    return n\n  }\n\n  const handleSubmit = (recordStatusId) => {\n    if (validateForm()) {\n      const formData = {\n        title: title.trim(),\n        content: content.trim(),\n        file: file,\n        date: date.trim(),\n        origin: origin.trim(),\n        author: author.trim(),\n        recordType: parseIntOrError(recordType),\n        sourceArchive: parseIntOrError(sourceArchive),\n        collections: collections.map(parseIntOrError),\n        recordStatus: recordStatusId === null ? IN_PROGRESS : recordStatusId,\n      }\n\n      if (newRecord) {\n        saveRecord(formData).then((data) => {\n          if (data.error) {\n            setMessage({ message: data.error, type: 'error' })\n          } else {\n            clearForm()\n            setMessage({ message: data.success, type: 'success' })\n          }\n        })\n      } else {\n        updateRecord(parseIntOrError(id), formData).then((data) => {\n          if (data.error) {\n            setMessage({message: data.error, type: 'error' })\n          } else {\n            setMessage({ message: data.success, type: 'success' })\n          }\n        })\n      }\n\n    } else {\n      setMessage({\n        message: 'Please fill out required fields correctly',\n        type: 'error',\n      })\n    }\n  }\n\n  const header = newRecord ? 'New Record' : 'Edit Record'\n\n  return (\n    <form\n      className=\"uk-form-horizontal uk-margin-large uk-margin-top\"\n      encType=\"multipart/form-data\"\n      onSubmit={handleSubmit}\n    >\n      {message.message && (\n        <MessageBox\n          onChange={() => {\n            setMessage({\n              message: null,\n              type: null,\n            })\n          }}\n          message={message.message}\n          type={message.type}\n        />\n      )}\n      {recordStatus === 'unpublished' && (\n        <MessageBox\n          message=\"The record has been unpublished while in edit mode!\"\n          type=\"warning\"\n        />\n      )}\n      <h1> {header} </h1>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Title </label>\n        <div className=\"uk-form-controls\">\n          <input\n            className={\n              'uk-form-width-large uk-input ' +\n              (validationErrors.title && 'uk-form-danger')\n            }\n            type=\"text\"\n            value={title}\n            onChange={(e) => {\n              clearTitleError()\n              setTitle(e.target.value)\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label htmlFor=\"file\" className=\"uk-form-label\"> Image </label>\n        <div className=\"uk-form-controls\">\n          <input\n            type=\"file\"\n            name=\"file\"\n            accept=\".jpg, .jpeg, .png\"\n            onChange={(e) => {\n              setFile(e.target.files[0])\n            }}\n          />\n        </div>\n      </div> \n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Content </label>\n        <div className=\"uk-form-controls\">\n          <textarea\n            className=\"uk-form-width-large uk-textarea\"\n            value={content}\n            onChange={(e) => {\n              setContent(e.target.value)\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Date </label>\n        <div className=\"uk-form-controls\">\n          <input\n            className={\n              'uk-form-width-large uk-input ' +\n              (validationErrors.date && 'uk-form-danger')\n            }\n            type=\"date\"\n            value={date}\n            onChange={(e) => {\n              clearDateError()\n              setDate(e.target.value)\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Origin </label>\n        <div className=\"uk-form-controls\">\n          <input\n            className=\"uk-form-width-large uk-input\"\n            type=\"text\"\n            value={origin}\n            onChange={(e) => {\n              setOrigin(e.target.value)\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Author </label>\n        <div className=\"uk-form-controls\">\n          <input\n            className=\"uk-form-width-large uk-input\"\n            type=\"text\"\n            value={author}\n            onChange={(e) => {\n              setAuthor(e.target.value)\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Record Type </label>\n        <div className=\"uk-form-controls\">\n          <select\n            className={\n              'uk-form-width-large uk-select ' +\n              (validationErrors.recordType && 'uk-form-danger')\n            }\n            value={recordType}\n            onChange={(e) => {\n              clearRecordTypeError()\n              setRecordType(e.target.value)\n            }}\n          >\n            <option value=\"\"> No Record Type </option>\n            {props.recordTypes.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Source Archive </label>\n        <div className=\"uk-form-controls\">\n          <select\n            className={\n              'uk-form-width-large uk-select ' +\n              (validationErrors.sourceArchive && 'uk-form-danger')\n            }\n            value={sourceArchive}\n            onChange={(e) => {\n              clearSourceArchiveError()\n              setSourceArchive(e.target.value)\n            }}\n          >\n            <option value=\"\"> No Source Archive </option>\n            {props.sourceArchives.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"uk-margin\">\n        <label className=\"uk-form-label\"> Collections </label>\n        <div className=\"uk-form-controls uk-form-controls-text\">\n          <div>\n            {validationErrors.collections && (\n              <ValidationError error={validationErrors.collections} />\n            )}\n          </div>\n\n          <div className=\"uk-grid-small uk-child-width-1-2 uk-grid\">\n            {props.collections.map(({ id, name }) => {\n              return (\n                <label key={id}>\n                  <input\n                    className=\"uk-checkbox\"\n                    type=\"checkbox\"\n                    key={id}\n                    name=\"collections\"\n                    value={id}\n                    checked={collections.includes(id)}\n                    onChange={() => {\n                      clearCollectionsError()\n                      handleCollection(id)\n                    }}\n                  />\n                  &nbsp;&nbsp; {name}\n                </label>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"uk-form-width-large\">\n        <input\n          className=\"uk-button uk-button-default uk-margin-top uk-margin-right\"\n          onClick={() => {handleSubmit(recordStatus)}}\n          type=\"button\"\n          value=\"Save\"\n        />\n        {(!newRecord && recordStatus !== IN_PROGRESS) && (\n          <input\n            className=\"uk-button uk-button-primary uk-margin-top\"\n            onClick={() => {\n              handleSubmit(PUBLISHED)\n            }}\n            type=\"button\"\n            value=\"Save &amp; Publish\"\n          />\n        )}\n        {(newRecord || recordStatus === IN_PROGRESS) && (\n          <input\n            className=\"uk-button uk-button-primary uk-margin-top\"\n            onClick={() => {\n              handleSubmit(PENDING_APPROVAL)\n            }}\n            type=\"button\"\n            value=\"Submit for Approval\"\n          />\n        )}\n      </div>\n    </form>\n  )\n}\n\nexport default RecordForm\n","import { useState, useEffect } from 'react'\nimport { createUser, getUserRoles } from '../api.js'\n\nimport MessageBox from '../MessageBox.js'\n\n// capitalize a string\nfunction capitalize(s) {\n  if (s.length > 0) {\n    return s[0].toUpperCase() + s.slice(1)\n  }\n  return s\n}\n\nfunction UserForm() {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  // Every role defaults to being an editor. 1 means editor\n  const [roleId, setRoleId] = useState(1)\n\n  const [roles, setRoles] = useState([])\n\n  const [error, setError] = useState(null)\n  const [message, setMessage] = useState(null)\n\n  const clearForm = () => {\n    setFirstName('')\n    setLastName('')\n    setUsername('')\n    setPassword('')\n    setRoleId(1)\n  }\n\n  useEffect(() => {\n    getUserRoles().then((data) => {\n      if (data.roles) {\n        setRoles(data.roles)\n      }\n    })\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const userData = { firstName, lastName, username, password, roleId }\n    createUser(userData).then((res) => {\n      if (res.success) {\n        setMessage(res.success)\n        clearForm()\n      } else {\n        setError(res.error)\n      }\n    })\n  }\n\n  const changeFirstName = (event) => {\n    setFirstName(event.target.value)\n  }\n\n  const changeLastName = (event) => {\n    setLastName(event.target.value)\n    setUsername(\n      firstName.charAt(0).toLowerCase() + event.target.value.toLowerCase(),\n    )\n  }\n\n  const changeUsername = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const changePassword = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const changeRole = (event) => {\n    const roleId = parseInt(event.target.value)\n    if (isNaN(roleId)) {\n      setRoleId(1)\n    } else {\n      setRoleId(roleId)\n    }\n  }\n\n  return (\n    <form\n      className=\"uk-form-stacked uk-form-width-large uk-margin-top\"\n      onSubmit={handleSubmit}\n    >\n      {message && (\n        <MessageBox\n          onClick={() => {\n            setMessage(null)\n          }}\n          message={message}\n          type=\"success\"\n        />\n      )}\n      {error && (\n        <MessageBox\n          onClick={() => {\n            setError(null)\n          }}\n          message={error}\n          type=\"error\"\n        />\n      )}\n\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">First Name</label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"text\"\n          name=\"firstName\"\n          onChange={changeFirstName}\n          value={firstName}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">Last Name</label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"text\"\n          name=\"lastName\"\n          onChange={changeLastName}\n          value={lastName}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">Username</label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"text\"\n          name=\"username\"\n          onChange={changeUsername}\n          value={username}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">Password</label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"password\"\n          name=\"password\"\n          onChange={changePassword}\n          value={password}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">Role</label>\n        <select className=\"uk-select\" value={roleId} onChange={changeRole}>\n          {roles.length !== 0 &&\n            roles.map(({ id, name }) => (\n              <option value={id} key={id}>\n                {' '}\n                {capitalize(name)}{' '}\n              </option>\n            ))}\n        </select>\n      </div>\n      <input\n        className=\"uk-button uk-button-primary uk-margin-top\"\n        type=\"submit\"\n        value=\"Create User\"\n      />\n    </form>\n  )\n}\n\nexport default UserForm\n","import {Link} from 'react-router-dom'\nimport {getUsers, disableUser} from '../api'\nimport {useState, useEffect} from 'react'\nimport {UrlFor} from '../routes.js'\n\nfunction UserRow(props) {\n\n  const {id, firstName, lastName, username, role} = props\n\n  const deleteUser = function (e){\n    e.preventDefault();\n    const userId = parseInt(id) \n    if (isNaN(userId)) {\n      console.log('Id was not a number') \n    }\n    disableUser(id).then(response => {\n      if (response.error) {\n        console.log(response.error)\n      } else {\n        console.log(response.success)\n      }\n    })\n  }\n\n  return (\n    <tr>\n      <td> \n        <Link\n          to={`/editUser/${id}`}\n          className=\"uk-icon-link uk-margin-small-right\"\n          uk-icon=\"file-edit\"\n        ></Link>\n      </td>\n      <td>\n        <Link\n          onClick={deleteUser}\n          className=\"uk-icon-link uk-margin-small-right\"\n          uk-icon=\"trash\"\n        ></Link>\n      </td> \n      <td>{lastName}</td>\n      <td>{firstName}</td>\n      <td>{username}</td>\n      <td>{role}</td>\n    </tr>\n  )\n}\n\nexport default function UserListings(props) {\n  const [users, setUsers] = useState([]) \n\n  useEffect(() => {\n    getUsers().then((data) => {\n      if (data.users) {\n        setUsers(data.users)\n      }\n    })\n  }, [])\n\n  return (\n    <div>\n      <Link\n        to={UrlFor('addUser')}\n        className=\"uk-button uk-button-primary uk-margin-right\"\n      >\n        {' '}\n        Add New User{' '}\n      </Link>\n\n\n      <table className=\"uk-table uk-table-middle uk-table-divider uk-table-hover uk-margin-medium\">\n        <thead>\n          <tr>\n            <th className=\"uk-table-small\"></th>\n            <th className=\"uk-table-small\"></th>\n            <th className=\"uk-width-small\">Last Name</th>\n            <th>First Name</th>\n            <th>Username</th>\n            <th>Role</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(({id, firstName, lastName, username, role}) => (\n            <UserRow\n              id={id}\n              firstName={firstName}\n              lastName={lastName}\n              username={username}\n              role={role}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","\nimport {Link} from 'react-router-dom'\nimport {getSourceArchives} from '../api'\nimport {useState, useEffect} from 'react'\nimport {UrlFor} from '../routes.js'\n\nfunction SourceArchiveRow(props) {\n\n  const {id, name} = props\n\n  return (\n    <tr>\n      <td> \n        <Link\n          to={`/editSourceArchive/${id}`}\n          className=\"uk-icon-link uk-margin-small-right\"\n          uk-icon=\"file-edit\"\n        ></Link>\n      </td>\n      <td>{name}</td>\n    </tr>\n  )\n}\n\nexport default function SourceArchiveListings(props) {\n  const [sourceArchives, setSourceArchives] = useState([]) \n\n  useEffect(() => {\n    getSourceArchives().then((data) => {\n      if (data.sourceArchives) {\n        setSourceArchives(data.sourceArchives)\n      }\n    })\n  }, [])\n\n  return (\n    <div>\n      <Link\n        to={UrlFor('addSourceArchive')}\n        className=\"uk-button uk-button-primary uk-margin-right\"\n      >\n        {' '}\n        Add New Source Archive{' '}\n      </Link>\n\n\n      <table className=\"uk-table uk-table-middle uk-table-divider uk-table-hover uk-margin-medium\">\n        <thead>\n          <tr>\n            <th className=\"uk-table-small\"></th>\n            <th className=\"uk-table-small\"></th>\n            <th className=\"uk-width-small\">Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sourceArchives.map(({id, name}) => (\n            <SourceArchiveRow\n              id={id}\n              name={name}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { Switch, Link, Route, Redirect } from 'react-router-dom'\nimport { UrlFor } from './routes'\n\nimport Header from './Header'\nimport PaginationButtons from './PaginationButton'\nimport SearchForm from './SearchForm'\nimport RecordTable from './RecordTable'\nimport RecordDetail from './RecordDetail'\nimport LoginForm from './LoginForm'\n\nimport Dashboard from './Dashboard'\n\nimport { getPublicListingData } from './api'\nimport { useSearchParams } from './hooks'\nimport { useAuth, PrivateRoute } from './auth.js'\n\nimport RecordForm from './admin/RecordForm'\nimport UserForm from './admin/UserForm'\nimport UserListings from './admin/UserListings'\nimport SourceArchiveListings from './admin/SourceArchiveListings'\n\nfunction getOffset(searchParameters) {\n  let offsetParam = searchParameters.get('offset')\n  if (offsetParam === null) {\n    return 0\n  }\n  let offset = parseInt(offsetParam)\n  if (isNaN(offset)) {\n    return 0\n  }\n\n  return offset\n}\n\nfunction App() {\n  const auth = useAuth()\n\n  const searchParameters = useSearchParams()\n  const offset = getOffset(searchParameters)\n\n  const [records, setRecords] = useState(null)\n  const [years, setYears] = useState([])\n  const [pages, setPages] = useState(null)\n  const [recordTypes, setRecordTypes] = useState([])\n  const [collections, setCollections] = useState([])\n  const [collectionToId, setCollectionToId] = useState({})\n  const [sourceArchives, setSourceArchives] = useState([])\n  const [recordStatus, setRecordStatus] = useState([])\n\n  // stores whether a search was run or not\n  // used to show different error messages in record table\n  const [searched, setSearched] = useState(false)\n\n  const handleSearch = (searchParams) => {\n    const {\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n    } = searchParams\n    const params = {\n      offset,\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n    }\n    getPublicListingData(params).then(({ records, pages, years }) => {\n      setRecords(records)\n      setPages(pages)\n      setYears(years)\n      setSearched(true)\n    })\n  }\n\n  useEffect(() => {\n    getPublicListingData({ offset }).then(\n      ({\n        records,\n        pages,\n        years,\n        collections,\n        sourceArchives,\n        recordTypes,\n        recordStatus,\n      }) => {\n        setRecords(records)\n        setPages(pages)\n        setYears(years)\n        setCollections(collections.collections)\n        setCollectionToId(collections.collectionToId)\n        setSourceArchives(sourceArchives)\n        setRecordTypes(recordTypes)\n        setRecordStatus(recordStatus)\n      },\n    )\n  }, [offset])\n\n  return (\n    <div className=\"uk-marign-top\">\n      <header>\n        <h1> History Database </h1>\n        <nav className=\"uk-navbar\">\n          <div className=\"uk-nav-bar-left\">\n            <ul className=\"uk-navbar-nav\">\n              {auth.user ? (\n                <li>\n                  <Link to={UrlFor('adminHome')}> Dashboard </Link>\n                </li>\n              ) : (\n                <li>\n                  <Link to={UrlFor('home')}> Home </Link>\n                </li>\n              )}\n            </ul>\n          </div>\n          <div className=\"uk-navbar-right\">\n            <ul className=\"uk-navbar-nav\">\n              {auth.user ? (\n                <li>\n                  <Link\n                    to={UrlFor('logout')}\n                    onClick={() => {\n                      auth.signout()\n                    }}\n                  >\n                    {' '}\n                    Logout{' '}\n                  </Link>\n                </li>\n              ) : (\n                <li>\n                  <Link to={UrlFor('login')}> Login </Link>\n                </li>\n              )}\n            </ul>\n          </div>\n        </nav>\n      </header>\n\n      <Switch>\n        <Route path={UrlFor('viewRecord')}>\n          <Header>\n            <h1 className=\"uk-text-lead\"> History Record </h1>\n          </Header>\n\n          <RecordDetail records={records} />\n        </Route>\n\n        <Route path={UrlFor('login')}>\n          <LoginForm />\n        </Route>\n\n        <PrivateRoute path={UrlFor('newRecord')}>\n          <RecordForm\n            recordTypes={recordTypes}\n            collections={collections}\n            sourceArchives={sourceArchives}\n            recordStatus={recordStatus}\n            buttonText=\"Add\"\n          />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('editRecord')}>\n          <RecordForm\n            recordTypes={recordTypes}\n            collections={collections}\n            sourceArchives={sourceArchives}\n            recordStatus={recordStatus}\n            collectionToId={collectionToId}\n            buttonText=\"Update\"\n          />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('adminHome')}>\n          <Dashboard records={records} />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('addUser')}>\n          <UserForm />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('showSourceArchives')}>\n          <SourceArchiveListings />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('showUsers')}>\n          <UserListings />\n        </PrivateRoute>\n        <Route path={UrlFor('logout')}>\n          <Redirect to={UrlFor('home')} />\n        </Route>\n\n        <Route path={UrlFor('home')}>\n          {auth.user ? (\n            <Redirect to={UrlFor('adminHome')} />\n          ) : (\n            <>\n              <Header>\n                <h1 className=\"uk-text-lead\"> History Listing </h1>\n                <SearchForm\n                  years={!years ? [] : years}\n                  recordTypes={recordTypes}\n                  collections={collections}\n                  sourceArchives={sourceArchives}\n                  onSubmit={handleSearch}\n                />\n                <PaginationButtons\n                  currentPage={!offset ? 0 : offset}\n                  pages={pages}\n                />\n              </Header>\n              <RecordTable searched={searched} records={records} />\n            </>\n         )}\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'; \n\nimport './index.css';\nimport App from './App';\nimport {ProvideAuth} from './auth';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <ProvideAuth> \n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </ProvideAuth>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}