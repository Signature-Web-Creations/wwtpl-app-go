{"version":3,"sources":["routes.js","Header.js","PaginationButton.js","SearchForm.js","RecordRow.js","RecordTable.js","api.js","RecordDetail.js","auth.js","LoginForm.js","hooks.js","admin/RecordRow.js","admin/RecordTable.js","Dashboard.js","admin/fields/TitleRow.js","admin/fields/FileAttachmentRow.js","admin/fields/AttachmentTypeRow.js","admin/fields/ContentRow.js","admin/fields/DateRow.js","admin/fields/OriginRow.js","admin/fields/AuthorRow.js","admin/fields/RecordIdRow.js","admin/fields/RecordTypeRow.js","admin/fields/SourceArchiveRow.js","admin/fields/DateEnteredRow.js","admin/fields/CollectionRow.js","MessageBox.js","admin/RecordForm.js","admin/UserForm.js","admin/UserListings.js","App.js","reportWebVitals.js","index.js"],"names":["routes","adminHome","home","login","logout","showUsers","addUser","editRecord","url","params","id","viewRecord","UrlFor","name","route","undefined","Error","Header","props","className","children","PrevButton","currentPage","href","uk-pagination-previous","NextButton","pages","uk-pagination-next","PaginationButtons","style","height","padding","borderWidth","SearchForm","useState","query","setQuery","searchYear","setSearchYear","searchCollection","setSearchCollection","searchSourceArchive","setSearchSourceArchive","searchRecordType","setSearchRecordType","searchStatus","setSearchStatus","showAdvancedSearch","setShowAdvancedSearch","advancedSearchClassName","advancedSearchOptionsClass","isLoggedIn","onSubmit","e","preventDefault","performSearch","uk-grid","value","type","placeholder","onChange","target","years","map","year","uk-icon","uk-tooltip","onClick","recordTypes","sourceArchives","collections","status","RecordRow","date","title","to","NoResultsPage","PublicListings","records","recordType","RecordTable","searched","getPublicListingData","uri","queryParameters","baseUri","offset","push","encodeURIComponent","searchRecordStatus","length","join","fetch","then","res","json","getPublicRecordByID","username","password","a","data","method","mode","cache","credentials","headers","body","JSON","stringify","response","userData","userId","getValueOrDefault","defaultValue","Loading","TitleRow","ImageRow","alt","src","FileAttachmentRow","attachmentType","fileName","ContentRow","text","content","formatDate","matches","match","month","day","DateRow","OriginRow","origin","AuthorRow","author","RecordTypeRow","SourceArchiveRow","sourceArchive","CollectionRow","split","getCollectionArray","collection","Detail","record","RecordDetail","useParams","setRecord","useEffect","authContext","createContext","useAuth","useContext","useProvideAuth","user","setUser","signin","onError","result","success","signout","ProvideAuth","auth","Provider","PrivateRoute","rest","render","LoginForm","setUsername","setPassword","error","setError","handleCloseErrorBox","ErrorBox","uk-alert","uk-close","console","log","event","useSearchParams","URLSearchParams","useLocation","search","editUrl","AdminListings","recordStatus","Dashboard","searchParameters","offsetParam","get","parseInt","isNaN","getOffset","setRecords","setYears","setPages","setStatus","setRecordTypes","setCollections","setSourceArchives","setRecordStatus","setSearched","searchParams","uk-form-custom","disabled","AttachmentTypeRow","rows","RecordIdRow","isSelected","selected","source","DateEnteredRow","handleCheckbox","MessageBox","messageClass","handleCloseBox","message","EditRecord","setMessage","UserForm","firstName","setFirstName","lastName","setLastName","roleId","setRoleId","roles","setRoles","SuccessBox","getUserRoles","createUser","charAt","toLowerCase","s","toUpperCase","slice","UserRow","role","disableUser","UserListings","users","setUsers","getUsers","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed0a4e96.chunk.js","sourcesContent":["const routes = {\n  adminHome: '/admin',\n  home: '/',\n  login: '/login',\n  logout: '/logout',\n  showUsers: '/users',\n  addUser: '/adduser',\n  editRecord: {\n    url: '/editrecord',\n    params: {\n      id: ':id',\n    },\n  },\n  viewRecord: {\n    url: '/record',\n    params: {\n      id: ':id',\n    },\n  },\n}\n\nexport function UrlFor(name, params) {\n  let route = ''\n\n  if (typeof routes[name] === 'string') {\n    route = routes[name]\n  } else {\n    if (params !== undefined) {\n      route = routes[name].url + '/' + params.id\n    } else {\n      route = routes[name].url + '/' + routes[name].params.id\n    }\n  }\n\n  if (route === undefined) {\n    throw new Error(`Route doesn't exist: ${name}`)\n  }\n\n  return route\n}\n","\nexport default function Header(props) {\n   return (\n    <div className=\"uk-margin-top\">\n     {props.children}\n    </div>\n   )\n}\n","\n\nfunction PrevButton(props) {\n  if (props.currentPage === 0) {\n    return null \n  } \n\n  const href = `/?offset=${props.currentPage - 1}` \n  return (\n    <a href={href}> \n      <span className=\"uk-margin-small-right\" uk-pagination-previous=\"true\"></span>\n      Previous\n    </a>\n  )\n}\n\nfunction NextButton(props) {\n  if (props.currentPage >= props.pages) {\n    return null \n  } \n\n  const href = `/?offset=${props.currentPage + 1}` \n  return (\n    <a href={href}>\n      Next\n      <span className=\"uk-margin-small-left\" uk-pagination-next=\"true\"></span>\n    </a>\n  )\n}\n\nexport default function PaginationButtons(props) {\n  if (props.pages === null) {\n    return null\n  } else {\n    return (\n    <ul className=\"uk-pagination uk-margin-large-top\"> \n      <li>\n        <PrevButton currentPage={props.currentPage} />\n      </li>\n      <li>\n        <hr\n          className=\"uk-divider-vertical\"\n          style={{height: \"30px\", padding: \"4px 0\", borderWidth: \"2px\"}}\n        />\n      </li>\n      <li> \n        <NextButton currentPage={props.currentPage} pages={props.pages} />\n      </li>\n    </ul> \n    )\n  }\n}\n","import './SearchForm.css'\nimport { useState } from 'react'\n\nexport default function SearchForm(props) {\n  const [query, setQuery] = useState('')\n  const [searchYear, setSearchYear] = useState('')\n  const [searchCollection, setSearchCollection] = useState('')\n  const [searchSourceArchive, setSearchSourceArchive] = useState('')\n  const [searchRecordType, setSearchRecordType] = useState('')\n  const [searchStatus, setSearchStatus] = useState('')\n\n  const [showAdvancedSearch, setShowAdvancedSearch] = useState(false)\n  const performSearch = () => {\n    const params = {\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n      searchStatus,\n    }\n    props.onSubmit(params)\n  }\n  const clearSearchFields = () => {\n    setQuery('')\n    setSearchYear('')\n    setSearchCollection('')\n    setSearchSourceArchive('')\n    setSearchRecordType('')\n    setSearchStatus('')\n  }\n  const show = showAdvancedSearch ? 'show' : ''\n  const advancedSearchClassName = `advancedSearchOptions uk-grid-small ${show}`\n\n  // If logged in\n  const advancedSearchOptionsClass = !props.isLoggedIn\n    ? 'uk-width-1-3@s'\n    : 'uk-width-1-4@s'\n\n  return (\n    <form\n      className=\"uk-margin-top\"\n      onSubmit={(e) => {\n        e.preventDefault()\n        performSearch()\n      }}\n    >\n      <div className=\"searchBar uk-grid-small\" uk-grid=\"true\">\n        <div className=\"uk-width-expand@s\">\n          <input\n            className=\"uk-input\"\n            value={query}\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={(e) => {\n              setQuery(e.target.value)\n            }}\n          />\n        </div>\n        <div className=\"uk-width-1-3@s\">\n          <select\n            className=\"uk-select\"\n            value={searchYear}\n            onChange={(e) => {\n              setSearchYear(e.target.value)\n            }}\n          >\n            <option value=\"\">Year</option>\n            {props.years.map((year) => (\n              <option key={year} value={year}>\n                {' '}\n                {year}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div\n          className=\"advancedSearchButton uk-width-auto@s uk-grid-small\"\n          uk-grid=\"true\"\n        >\n          <div className=\"uk-width-auto\">\n            <button\n              className=\"uk-button uk-button-default\"\n              uk-icon=\"more\"\n              uk-tooltip=\"Advanced Search Options\"\n              onClick={() => {\n                setShowAdvancedSearch(!showAdvancedSearch)\n              }}\n            ></button>\n          </div>\n          <div className=\"uk-width-auto\">\n            <button\n              className=\"uk-button uk-button-default\"\n              type=\"submit\"\n              uk-icon=\"refresh\"\n              uk-tooltip=\"Clear Search\"\n              onClick={() => {\n                clearSearchFields()\n              }}\n            ></button>\n          </div>\n          <div className=\"uk-width-auto\">\n            <button\n              className=\"uk-button uk-button-primary searchButton\"\n              type=\"submit\"\n              uk-icon=\"search\"\n              uk-tooltip=\"Search\"\n            ></button>\n          </div>\n        </div>\n      </div>\n\n      <div className={advancedSearchClassName} uk-grid=\"true\">\n        <div className={advancedSearchOptionsClass}>\n          <select\n            className=\"uk-select\"\n            value={searchRecordType}\n            onChange={(e) => {\n              setSearchRecordType(e.target.value)\n            }}\n          >\n            <option value=\"\"> Type </option>\n            {props.recordTypes.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className={advancedSearchOptionsClass}>\n          <select\n            className=\"uk-select\"\n            value={searchSourceArchive}\n            onChange={(e) => {\n              setSearchSourceArchive(e.target.value)\n            }}\n          >\n            <option value=\"\"> Source Archive </option>\n            {props.sourceArchives.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className={advancedSearchOptionsClass}>\n          <select\n            className=\"uk-select\"\n            value={searchCollection}\n            onChange={(e) => {\n              setSearchCollection(e.target.value)\n            }}\n          >\n            <option value=\"\"> Collection </option>\n            {props.collections.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {' '}\n                {name}{' '}\n              </option>\n            ))}\n          </select>\n        </div>\n        {props.isLoggedIn && (\n          <div className={advancedSearchOptionsClass}>\n            <select\n              className=\"uk-select\"\n              value={searchStatus}\n              onChange={(e) => {\n                setSearchStatus(e.target.value)\n              }}\n            >\n              <option value=\"\">Status</option>\n              {props.status.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {' '}\n                  {name}{' '}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n      </div>\n    </form>\n  )\n}\n","import { Link } from 'react-router-dom'\nimport { UrlFor } from './routes'\n\nexport default function RecordRow(props) {\n  return (\n    <tr>\n      <td>{props.date}</td>\n      <td>{props.title}</td>\n      <td>{props.type}</td>\n      <td>\n        <Link\n          to={UrlFor('viewRecord', { id: props.id })}\n          className=\"uk-button uk-button-primary\"\n        >\n          {' '}\n          View{' '}\n        </Link>\n      </td>\n    </tr>\n  )\n}\n","import RecordRow from './RecordRow'\n\nfunction NoResultsPage() {\n  return <h1> Your search did not return any results. </h1>\n}\n\nfunction PublicListings(props) {\n  return (\n    <table className=\"uk-table uk-table-middle uk-table-divider uk-table-hover uk-margin-medium\">\n      <thead>\n        <tr>\n          <th className=\"uk-width-small\">Date</th>\n          <th>Title</th>\n          <th>Type</th>\n          <th className=\"uk-table-shrink\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.records.map(({ id, date, title, recordType }) => (\n          <RecordRow\n            id={id}\n            key={id}\n            date={date}\n            title={title}\n            type={recordType}\n          />\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default function RecordTable(props) {\n  if (props.records === null) {\n    if (props.searched) {\n      return <NoResultsPage />\n    } else {\n      return null\n    }\n  } else {\n    return <PublicListings records={props.records} />\n  }\n}\n","export function getPublicListingData(params) {\n  const queryParameters = []\n  const baseUri = '/api/public/records'\n\n  if (params.offset && params.offset !== null) {\n    queryParameters.push(`offset=${encodeURIComponent(params.offset)}`)\n  }\n\n  if (params.query && params.query !== '') {\n    queryParameters.push(`query=${encodeURIComponent(params.query)}`)\n  }\n\n  if (params.searchYear && params.searchYear !== '') {\n    queryParameters.push(`year=${encodeURIComponent(params.searchYear)}`)\n  }\n\n  if (params.searchCollection && params.searchCollection !== '') {\n    queryParameters.push(\n      `collection=${encodeURIComponent(params.searchCollection)}`,\n    )\n  }\n\n  if (params.searchSourceArchive && params.searchSourceArchive !== '') {\n    queryParameters.push(\n      `sourceArchive=${encodeURIComponent(params.searchSourceArchive)}`,\n    )\n  }\n\n  if (params.searchRecordType && params.searchRecordType !== '') {\n    queryParameters.push(\n      `recordType=${encodeURIComponent(params.searchRecordType)}`,\n    )\n  }\n\n  if (params.searchRecordStatus && params.searchRecordStatus !== '') {\n    queryParameters.push(\n      `recordStatus=${encodeURIComponent(params.searchRecordStatus)}`,\n    )\n  }\n\n  let uri\n  if (queryParameters.length !== 0) {\n    uri = baseUri + `?${queryParameters.join('&')}`\n  } else {\n    uri = baseUri\n  }\n\n  return fetch(uri).then((res) => res.json())\n}\n\nexport function getPublicRecordByID(id) {\n  return fetch(`/api/public/records/${id}`).then((res) => res.json())\n}\n\nexport async function login(username, password) {\n  const data = { username, password }\n\n  const response = await fetch('/api/login', {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  })\n\n  return response.json()\n}\n\nexport async function logout() {\n  return fetch('/api/logout', {\n    method: 'POST',\n    mode: 'same-origin',\n    cache: 'no-cache',\n    credentials: 'include',\n  })\n}\n\n// Returns user data for the logged in user. \n// If user is not logged in returns an error message\nexport function getUserData() {\n  return fetch(`/api/user`).then((res) => res.json())\n}\n\n// Creates a new user. User must be authenticated\n// and an admin to succeed\nexport async function createUser(userData) {\n  const response = await fetch('/api/user', {\n      method: 'POST',\n      mode: 'same-origin',\n      cache: 'no-cache',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      }, \n\n      body: JSON.stringify(userData)\n  })\n\n  return response.json()\n}\n\n// Returns a json list of users. If the user is not\n// authenticated returns a 401 unauthorized\nexport async function getUsers() {\n  const response = await fetch('/api/users', {\n      method: 'GET',\n      mode: 'same-origin',\n      cache: 'no-cache',\n      credentials: 'include'\n  })\n\n  return response.json()\n}\n\n// Returns a list of user roles. \nexport async function getUserRoles() {\n  const response = await fetch('/api/user_roles', {\n    method: 'GET', \n    mode: 'same-origin', \n    cache: 'no-cache', \n  })\n\n  return response.json()\n}\n\n// Disables a user \nexport async function disableUser(userId) {\n  const response = await fetch('/api/user/disable', {\n    method: 'POST', \n    mode: 'same-origin', \n    cache: 'no-cache', \n    credentials: 'include', \n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({userId}) \n  })\n  return response.json() \n}\n","import { useParams } from 'react-router-dom'; \nimport { useState, useEffect } from 'react';\nimport { getPublicRecordByID } from './api';\n\nconst getValueOrDefault = (value, defaultValue) => {\n  if (value) {\n    return value\n  } else {\n    return defaultValue;\n  }\n}\n\nfunction Loading() {\n  return <h1> Loading </h1> \n}\n\nfunction TitleRow(props) {\n  return (\n    <tr>\n      <td className=\"uk-width-medium\"><strong>Title</strong></td>\n      <td>{props.title}</td>\n    </tr>\n  )\n}\n\nfunction ImageRow(props) {\n  return (\n    <tr>\n      <td><strong>Image</strong></td>\n      <td><img alt={props.alt} src={`/media/${props.src}`} /></td>\n    </tr>\n  )\n}\n\nfunction FileAttachmentRow(props) {\n  if (props.attachmentType === null) {\n    return null;\n  }\n  else if (props.attachmentType === 'image') {\n    return <ImageRow alt={props.title} src={props.fileName} />\n  } else {\n    return null;\n  }\n}\n\nfunction ContentRow(props) {\n  const text = props.content === \"\" ? \"No content\" : props.content; \n  return (\n    <tr>\n      <td>\n        <strong>\n          Text\n        </strong>\n      </td>\n      <td> {text} </td>\n    </tr>\n  );\n}\n\nconst formatDate = (date) => {\n  // Converts date with format yyyy-mm-dd to mm/dd/yyyy\n  // If it cannot convert, then just returns the given date\n\n  const re = /(\\d{4})-(\\d{2})-(\\d{2})/;\n  const matches = date.match(re); \n  if (matches !== null) {\n    const year = matches[1];\n    const month = matches[2];\n    const day = matches[3];\n  \n    return `${month}/${day}/${year}`;\n  } else {\n    return date;\n  }\n}\n\nfunction DateRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>\n          Date\n        </strong>\n      </td>\n      <td>{props.date === \"\" ? \"Date unknown\" : formatDate(props.date)} </td>\n    </tr>\n  );\n}\n\nfunction OriginRow(props) {\n  return (\n    <tr>\n     <td>\n      <strong>\n        Origin\n      </strong>\n     </td>\n     <td>{getValueOrDefault(props.origin, \"Origin Unknown\")}</td>\n    </tr>\n  )\n}\n\nfunction AuthorRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>\n          Author\n        </strong>\n      </td>\n      <td>{getValueOrDefault(props.author, \"Unknown\")}</td>\n    </tr>\n  );\n}\n\nfunction RecordTypeRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>\n          Type\n        </strong>\n      </td>\n      <td>{getValueOrDefault(props.recordType, \"Unknown\")}</td>\n    </tr>\n  );\n}\n\nfunction SourceArchiveRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>\n          Source Archive\n        </strong>\n      </td>\n      <td>{getValueOrDefault(props.sourceArchive, \"Unknown\")}</td>\n    </tr>\n  );\n}\n\nfunction getCollectionArray(collections){\n  if (collections) {\n    return collections.split(';');\n  } else {\n    return [];\n  }\n}\n\nfunction CollectionRow(props) {\n  let collections = getCollectionArray(props.collections)\n\n  const collectionLabel = (collection) => {\n    return (\n      <span key={collection} className=\"uk-label\"> {collection} </span>\n    )\n  }\n  \n  if (collections.length === 0) {\n    collections.push('Collection Unknown');\n  }\n\n  return (\n    <tr>\n      <td>\n        <strong>\n          Collection\n        </strong>\n      </td>\n      <td> \n        {collections.map(collectionLabel)}\n      </td>\n    </tr>\n  );\n}\n\nfunction Detail(props) {\n  const record = props.record;\n  return (\n    <table className=\"uk-table uk-table-small uk-table-divider uk-margin-medium\">\n      <tbody>\n        <TitleRow title={record.title} />\n        <FileAttachmentRow title={record.title} attachmentType={record.attachmentType} fileName={record.fileName} />\n        <ContentRow content={record.content} />\n        <DateRow date={record.date} />\n        <OriginRow origin={record.origin} />\n        <AuthorRow author={record.author} />\n        <RecordTypeRow recordType={record.recordType} />\n        <SourceArchiveRow sourceArchive={record.sourceArchive} />\n        <CollectionRow collections={record.collections} />\n      </tbody>\n    </table>\n  );\n}\n  \n\nfunction RecordDetail(props) {\n  let {id} = useParams();\n\n  const [record, setRecord] = useState(null)\n\n  useEffect(() => {\n    getPublicRecordByID(id).then(setRecord)\n  }, [id])\n\n  if (!record) {\n    return <Loading />\n  } else {\n    return <Detail record={record} />\n  }\n}\n\nexport default RecordDetail; \n","import {useState, useEffect, useContext, createContext} from 'react';\nimport {getUserData, login, logout} from './api'; \nimport {Route, Redirect} from 'react-router-dom';\n\n\n// Code for creating authContext and hooks \n// Adapted from https://usehooks.com/useAuth/\nconst authContext = createContext();\n\n// Hook for components to get the auth object\n// and re-render when it changes\nexport function useAuth() {\n  return useContext(authContext) \n}\n\n// Provider hook that creates auth object and handles state\nexport function useProvideAuth() {\n  const [user, setUser] = useState(false) \n\n  useEffect(() => {\n    getUserData().then(json => {\n      if (json.username) {\n        setUser(json)\n      }\n    })\n  }, [])\n\n  const signin = (username, password, onError) => {\n    login(username, password).then(result => {\n      if (result.success) {\n        setUser(result.user)\n      } else {\n        onError('invalid username/password')\n      }\n    })\n  }\n\n  const signout = () => {\n    logout().then(() => {\n      setUser(false)\n    })\n  }\n\n  return {\n    user, \n    signin,\n    signout,\n  }\n}\n\n// Provider component that wraps your app and makes auth object\n// available to any child component that calls useAuth()\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n\nexport function PrivateRoute({children, ...rest}) {\n  let auth = useAuth()\n\n  return (\n    <Route\n      {...rest} \n      render={() => \n        auth.user ? (\n          children\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  )\n}\n","import { useState } from 'react'\nimport { useAuth } from './auth.js'\nimport { Redirect, Link } from 'react-router-dom'\n\nexport default function LoginForm(props) {\n  const auth = useAuth()\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState(null)\n\n  const changeUsername = (event) => {\n    setError(null)\n    setUsername(event.target.value)\n  }\n\n  const changePassword = (event) => {\n    setError(null)\n    setPassword(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    auth.signin(username, password, () => setError)\n  }\n\n  const handleCloseErrorBox = () => {\n    setError(null)\n  }\n\n  function ErrorBox() {\n    return (\n      <div uk-alert={true} className=\"uk-alert-danger\">\n        <Link\n          className=\"uk-alert-close\"\n          uk-close={true}\n          onClick={handleCloseErrorBox}\n        ></Link>\n        <p>{error}</p>\n      </div>\n    )\n  }\n\n  console.log(auth.user)\n  if (auth.user) {\n    return <Redirect to=\"/dashboard\" />\n  }\n\n  return (\n    <form\n      className=\"uk-form-stacked uk-form-width-large uk-margin-top\"\n      onSubmit={handleSubmit}\n    >\n      {error && <ErrorBox />}\n\n      <div>\n        <label className=\"uk-form-label\"> Username </label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"text\"\n          name=\"username\"\n          onChange={changeUsername}\n          value={username}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label\"> Password </label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"password\"\n          name=\"password\"\n          onChange={changePassword}\n          value={password}\n        />\n      </div>\n      <input\n        className=\"uk-button uk-button-primary uk-margin-top\"\n        type=\"submit\"\n        value=\"login\"\n      />\n    </form>\n  )\n}\n","import {useLocation} from 'react-router-dom';\n\nexport function useSearchParams() {\n  // Returns search Parameters from URL \n  \n  return new URLSearchParams(useLocation().search);\n}\n","import { Link } from 'react-router-dom'\n\nfunction RecordRow(props) {\n  const handleDeleteRecord = () => {\n    // intiate delete record\n  }\n\n  const handleStatusColor = (status) => {\n    if (status === 'unpublished') {\n      return 'uk-label uk-label-warning'\n    } else if (status === 'deleted') {\n      return 'uk-label uk-label-error'\n    } else {\n      return 'uk-label uk-label-success'\n    }\n  }\n\n  const editUrl = `/editrecord/${props.id}`\n\n  return (\n    <tr>\n      <td>\n        <Link\n          to={editUrl}\n          className=\"uk-icon-link uk-margin-small-right\"\n          uk-icon=\"file-edit\"\n        ></Link>\n      </td>\n      <td>\n        <Link\n          onClick={handleDeleteRecord}\n          className=\"uk-icon-link uk-margin-small-right\"\n          uk-icon=\"trash\"\n        ></Link>\n      </td>\n      <td>{props.date}</td>\n      <td>{props.title}</td>\n      <td>\n        <span className={handleStatusColor(props.status)}>{props.status}</span>\n      </td>\n    </tr>\n  )\n}\n\nexport default RecordRow\n","import RecordRow from './RecordRow'\n\nfunction NoResultsPage() {\n  return <h1> Your search did not return any results. </h1>\n}\n\nfunction AdminListings(props) {\n  return (\n    <table className=\"uk-table uk-table-middle uk-table-divider uk-table-hover uk-margin-medium\">\n      <thead>\n        <tr>\n          <th className=\"uk-table-small\"></th>\n          <th className=\"uk-table-small\"></th>\n          <th className=\"uk-width-small\">Date</th>\n          <th>Title</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.records.map(({ id, date, title, recordStatus }) => (\n          <RecordRow id={id} date={date} title={title} status={recordStatus} />\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default function RecordTable(props) {\n  if (props.records === null) {\n    if (props.searched) {\n      return <NoResultsPage />\n    } else {\n      return null\n    }\n  } else {\n    return <AdminListings records={props.records} />\n  }\n}\n","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UrlFor } from './routes'\nimport { getPublicListingData } from './api'\nimport { useSearchParams } from './hooks'\nimport { useAuth } from './auth.js'\nimport AdminListings from './admin/RecordTable'\nimport SearchForm from './SearchForm'\nimport PaginationButtons from './PaginationButton'\n\nfunction getOffset(searchParameters) {\n  let offsetParam = searchParameters.get('offset')\n  if (offsetParam === null) {\n    return 0\n  }\n  let offset = parseInt(offsetParam)\n  if (isNaN(offset)) {\n    return 0\n  }\n\n  return offset\n}\n\nexport default function Dashboard() {\n  const auth = useAuth()\n  const searchParameters = useSearchParams()\n  const offset = getOffset(searchParameters)\n\n  const [records, setRecords] = useState(null)\n  const [years, setYears] = useState([])\n  const [pages, setPages] = useState(null)\n  const [status, setStatus] = useState(null)\n  const [recordTypes, setRecordTypes] = useState([])\n  const [collections, setCollections] = useState([])\n  const [sourceArchives, setSourceArchives] = useState([])\n  const [recordStatus, setRecordStatus] = useState([])\n\n  const [searched, setSearched] = useState(false)\n\n  const handleSearch = (searchParams) => {\n    const {\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n      searchStatus,\n    } = searchParams\n    const params = {\n      offset,\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n      searchStatus,\n    }\n    getPublicListingData(params).then(({ records, pages, years, status }) => {\n      setRecords(records)\n      setPages(pages)\n      setYears(years)\n      setStatus(status)\n      setSearched(true)\n    })\n  }\n\n  useEffect(() => {\n    getPublicListingData({ offset }).then(\n      ({\n        records,\n        pages,\n        years,\n        status,\n        collections,\n        sourceArchives,\n        recordTypes,\n        recordStatus,\n      }) => {\n        setRecords(records)\n        setPages(pages)\n        setYears(years)\n        setStatus(status)\n        setCollections(collections)\n        setSourceArchives(sourceArchives)\n        setRecordTypes(recordTypes)\n        setRecordStatus(recordStatus)\n      },\n    )\n  }, [offset])\n\n  return (\n    <>\n      <Link\n        to={UrlFor('addUser')}\n        className=\"uk-button uk-button-primary uk-margin-right\"\n      >\n        {' '}\n        Add New User{' '}\n      </Link>\n      <Link to={UrlFor('showUsers')} className=\"uk-button uk-button-default\">\n        {' '}\n        Manage Users{' '}\n      </Link>\n\n      <SearchForm\n        years={!years ? [] : years}\n        recordTypes={recordTypes}\n        collections={collections}\n        sourceArchives={sourceArchives}\n        status={recordStatus}\n        isLoggedIn={auth.user}\n        onSubmit={handleSearch}\n      />\n      <PaginationButtons currentPage={!offset ? 0 : offset} pages={pages} />\n\n      {/*\n       * List of pending records by default\n       * Needs to include a records status in the records\n       */}\n      <AdminListings searched={searched} records={records} />\n    </>\n  )\n}\n","function TitleRow(props) {\n  return (\n    <tr>\n      <td className=\"uk-width-medium\">\n        <strong>Title</strong>\n      </td>\n      <td>\n        <input\n          className=\"uk-input\"\n          type=\"text\"\n          placeholder=\"Title\"\n          value={props.title}\n        />\n      </td>\n    </tr>\n  )\n}\n\nexport default TitleRow\n","function FileAttachmentRow() {\n  return (\n    <tr>\n      <td>\n        <strong>File Attachment</strong>\n      </td>\n      <td>\n        <div uk-form-custom=\"target: true\">\n          <input type=\"file\" />\n          <input\n            className=\"uk-input uk-form-width-medium\"\n            type=\"text\"\n            placeholder=\"Select file\"\n            disabled={true}\n          />\n        </div>\n        <button className=\"uk-button uk-button-default\">Submit</button>\n      </td>\n    </tr>\n  )\n}\n\nexport default FileAttachmentRow\n","function AttachmentTypeRow() {\n  return (\n    <tr>\n      <td>\n        <strong>Attachment Type</strong>\n      </td>\n      <td>\n        <select className=\"uk-select\">\n          <option value=\"\">Select One</option>\n          <option>Image</option>\n          <option>Video</option>\n          <option>Document/PDF</option>\n        </select>\n      </td>\n    </tr>\n  )\n}\n\nexport default AttachmentTypeRow\n","function ContentRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>Content</strong>\n      </td>\n      <td>\n        <textarea\n          className=\"uk-textarea\"\n          rows=\"5\"\n          placeholder=\"Description\"\n          value={props.content}\n        ></textarea>\n      </td>\n    </tr>\n  )\n}\n\nexport default ContentRow\n","function DateRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>Date</strong>\n      </td>\n      <td>\n        <input\n          className=\"uk-input\"\n          type=\"date\"\n          placeholder=\"Input\"\n          value={props.date}\n        />\n      </td>\n    </tr>\n  )\n}\n\nexport default DateRow\n","function OriginRow() {\n  return (\n    <tr>\n      <td>\n        <strong>Origin</strong>\n      </td>\n      <td>\n        <select className=\"uk-select\">\n          <option value=\"\">Select One</option>\n          <option>Option 1</option>\n          <option>Option 2</option>\n          <option>Option 3</option>\n        </select>\n      </td>\n    </tr>\n  )\n}\n\nexport default OriginRow\n","function AuthorRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>Author</strong>\n      </td>\n      <td>\n        <input\n          className=\"uk-input\"\n          type=\"text\"\n          placeholder=\"Author\"\n          value={props.author}\n        />\n      </td>\n    </tr>\n  )\n}\n\nexport default AuthorRow\n","function RecordIdRow(props) {\n  return (\n    <tr>\n      <td>\n        <strong>Record ID</strong>\n      </td>\n      <td>\n        <input\n          className=\"uk-input\"\n          type=\"text\"\n          disabled={true}\n          placeholder=\"Record ID\"\n          value={props.id}\n        />\n      </td>\n    </tr>\n  )\n}\n\nexport default RecordIdRow\n","function RecordTypeRow(props) {\n  const handleSelect = (event) => {\n    // add each option to the list\n  }\n\n  const isSelected = (name) => {\n    if (props.type === name) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <tr>\n      <td>\n        <strong>Type</strong>\n      </td>\n      <td>\n        <select className=\"uk-select\" onChange={handleSelect}>\n          <option value=\"\"> Select One </option>\n          {props.recordTypes.map(({ id, name }) => (\n            <option key={id} value={id} selected={isSelected(name)}>\n              {name}\n            </option>\n          ))}\n        </select>\n      </td>\n    </tr>\n  )\n}\n\nexport default RecordTypeRow\n","function SourceArchiveRow(props) {\n  const handleSelect = (event) => {\n    // add each option to the list\n  }\n\n  const isSelected = (name) => {\n    if (props.source === name) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <tr>\n      <td>\n        <strong>Source Archive</strong>\n      </td>\n      <td>\n        <select className=\"uk-select\" onChange={handleSelect}>\n          <option value=\"\"> Select One </option>\n          {props.sourceArchives.map(({ id, name }) => (\n            <option key={id} value={id} selected={isSelected(name)}>\n              {name}\n            </option>\n          ))}\n        </select>\n      </td>\n    </tr>\n  )\n}\n\nexport default SourceArchiveRow\n","function DateEnteredRow() {\n  return (\n    <tr>\n      <td>\n        <strong>Date Entered</strong>\n      </td>\n      <td>\n        <input className=\"uk-input\" type=\"date\" placeholder=\"Input\" />\n      </td>\n    </tr>\n  )\n}\n\nexport default DateEnteredRow\n","function CollectionRow(props) {\n  const handleCheckbox = (event) => {\n    // add each option to the list\n  }\n\n  return (\n    <tr>\n      <td>\n        <strong>Collection</strong>\n      </td>\n      <td>\n        {props.collections.map(({ id, name }) => (\n          <>\n            <label>\n              <input\n                className=\"uk-checkbox\"\n                type=\"checkbox\"\n                onChange={handleCheckbox(id)}\n              />\n              &nbsp;&nbsp; {name}\n            </label>\n            <br />\n          </>\n        ))}\n      </td>\n    </tr>\n  )\n}\n\nexport default CollectionRow\n","import { Link } from 'react-router-dom'\n\nfunction MessageBox(props) {\n  const handleClose = () => {\n    props.handleCloseBox(null)\n  }\n\n  let messageClass = ''\n  if (props.type === 'error') {\n    messageClass = 'uk-alert-danger'\n  } else {\n    messageClass = 'uk-alert-success'\n  }\n\n  return (\n    <div uk-alert=\"true\" className={messageClass}>\n      <Link\n        className=\"uk-alert-close\"\n        uk-close=\"true\"\n        onClick={handleClose}\n      ></Link>\n      <p>{props.message}</p>\n    </div>\n  )\n}\n\nexport default MessageBox\n","import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getPublicRecordByID } from '../api'\n\nimport TitleRow from './fields/TitleRow'\nimport FileAttachmentRow from './fields/FileAttachmentRow'\nimport AttachmentTypeRow from './fields/AttachmentTypeRow'\nimport ContentRow from './fields/ContentRow'\nimport DateRow from './fields/DateRow'\nimport OriginRow from './fields/OriginRow'\nimport AuthorRow from './fields/AuthorRow'\nimport RecordIdRow from './fields/RecordIdRow'\nimport RecordTypeRow from './fields/RecordTypeRow'\nimport SourceArchiveRow from './fields/SourceArchiveRow'\nimport DateEnteredRow from './fields/DateEnteredRow'\nimport CollectionRow from './fields/CollectionRow'\nimport MessageBox from '../MessageBox'\n\nfunction EditRecord(props) {\n  let { id } = useParams()\n\n  const [record, setRecord] = useState(null)\n  const [message, setMessage] = useState(null)\n\n  function Loading() {\n    return <h1> Loading </h1>\n  }\n\n  useEffect(() => {\n    getPublicRecordByID(id).then(setRecord)\n  }, [id])\n\n  if (!record) {\n    return <Loading />\n  } else {\n    const handleSubmit = (event) => {\n      event.preventDefault()\n      // submit form\n    }\n\n    const handleCloseBox = (message) => {\n      setMessage(message)\n    }\n    // const handleMessageType = () => {}\n    // const han\n\n    return (\n      <form className=\"uk-form-stacked uk-margin-top\" onSubmit={handleSubmit}>\n        {message && (\n          <MessageBox\n            onChange={handleCloseBox}\n            message={message}\n            type=\"error\"\n          />\n        )}\n\n        <table className=\"uk-table uk-table-small uk-table-divider uk-margin-medium\">\n          <tbody>\n            <TitleRow title={record.title} />\n            <FileAttachmentRow />\n            <AttachmentTypeRow />\n            <ContentRow content={record.content} />\n            <DateRow date={record.date} />\n            <OriginRow origin={record.origin} />\n            <AuthorRow author={record.author} />\n            <RecordIdRow id={record.id} />\n            <RecordTypeRow\n              recordTypes={props.recordTypes}\n              type={record.recordType}\n            />\n            <SourceArchiveRow\n              sourceArchives={props.sourceArchives}\n              source={record.sourceArchive}\n            />\n            <DateEnteredRow />\n            <CollectionRow collections={props.collections} />\n          </tbody>\n        </table>\n\n        <input\n          className=\"uk-button uk-button-primary uk-margin-top\"\n          type=\"submit\"\n          value=\"Add Record\"\n        />\n      </form>\n    )\n  }\n}\n\nexport default EditRecord\n","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { createUser, getUserRoles } from '../api.js'\n\n// capitalize a string\nfunction capitalize(s) {\n  if (s.length > 0) {\n    return s[0].toUpperCase() + s.slice(1)\n  }\n  return s\n}\n\nfunction UserForm() {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  \n  // Every role defaults to being an editor. 1 means editor\n  const [roleId, setRoleId] = useState(1) \n\n  const [roles, setRoles] = useState([]) \n\n  const [error, setError] = useState(null)\n  const [message, setMessage] = useState(null)\n\n  const clearForm = () => {\n    setFirstName('')\n    setLastName('')\n    setUsername('') \n    setPassword('')\n    setRoleId(1)\n  }\n\n  useEffect(() => {\n    getUserRoles().then(data => {\n      if (data.roles) {\n        setRoles(data.roles)\n      }\n    })\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const userData = {firstName, lastName, username, password, roleId}\n    createUser(userData).then((res) => {\n      if (res.success) {\n        setMessage(res.success)\n        clearForm()\n      } else {\n        setError(res.error)\n      }\n    })\n  }\n\n  const changeFirstName = (event) => {\n    setFirstName(event.target.value)\n  }\n\n  const changeLastName = (event) => {\n    setLastName(event.target.value)\n    setUsername(\n      firstName.charAt(0).toLowerCase() + event.target.value.toLowerCase(),\n    )\n  }\n\n  const changeUsername = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const changePassword = (event) => {\n    setPassword(event.target.value)\n  }\n  \n  const changeRole = (event) => {\n    const roleId = parseInt(event.target.value)\n    if (isNaN(roleId)) {\n      setRoleId(1)\n    } else {\n      setRoleId(roleId)\n    }\n  }\n\n  function SuccessBox(props) {\n    return (\n      <div uk-alert={true} className=\"uk-alert-success\">\n        <Link\n          className=\"uk-alert-close\"\n          uk-close={true}\n          onClick={() => {\n            setMessage(null)\n          }}\n        ></Link>\n        <p>{props.message}</p>\n      </div>\n    )\n  }\n\n  function ErrorBox(props) {\n    return (\n      <div uk-alert={true} className=\"uk-alert-danger\">\n        <Link\n          className=\"uk-alert-close\"\n          uk-close={true}\n          onClick={() => {\n            setError(null)\n          }}\n        ></Link>\n        <p>{props.message}</p>\n      </div>\n    )\n  }\n\n  return (\n    <form\n      className=\"uk-form-stacked uk-form-width-large uk-margin-top\"\n      onSubmit={handleSubmit}\n    >\n      {message && <SuccessBox message={message}/>}\n      {error && <ErrorBox message={error}/>}\n\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">First Name</label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"text\"\n          name=\"firstName\"\n          onChange={changeFirstName}\n          value={firstName}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">Last Name</label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"text\"\n          name=\"lastName\"\n          onChange={changeLastName}\n          value={lastName}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">Username</label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"text\"\n          name=\"username\"\n          onChange={changeUsername}\n          value={username}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">Password</label>\n        <input\n          className=\"uk-form-width-large uk-input\"\n          type=\"password\"\n          name=\"password\"\n          onChange={changePassword}\n          value={password}\n        />\n      </div>\n      <div>\n        <label className=\"uk-form-label uk-margin-top\">Role</label>\n        <select value={roleId} onChange={changeRole}> \n          { roles.length !== 0 && roles.map(({id, name}) => <option value={id} key={id}> {capitalize(name)} </option>) }\n        </select>\n      </div>\n      <input\n        className=\"uk-button uk-button-primary uk-margin-top\"\n        type=\"submit\"\n        value=\"Create User\"\n      />\n    </form>\n  )\n}\n\nexport default UserForm\n","import {Link} from 'react-router-dom'\nimport {getUsers, disableUser} from '../api'\nimport {useState, useEffect} from 'react'\n\nfunction UserRow(props) {\n  const {id, firstName, lastName, username, role} = props\n\n  const deleteUser = function (e){\n    e.preventDefault();\n    const userId = parseInt(id) \n    if (isNaN(userId)) {\n      console.log('Id was not a number') \n    }\n    disableUser(id).then(response => {\n      if (response.error) {\n        console.log(response.error)\n      } else {\n        console.log(response.success)\n      }\n    })\n  }\n\n  return (\n    <tr>\n      <td> \n        <Link\n          to={`/editUser/${id}`}\n          className=\"uk-icon-link uk-margin-small-right\"\n          uk-icon=\"file-edit\"\n        ></Link>\n      </td>\n      <td>\n        <Link\n          onClick={deleteUser}\n          className=\"uk-icon-link uk-margin-small-right\"\n          uk-icon=\"trash\"\n        ></Link>\n      </td> \n      <td>{lastName}</td>\n      <td>{firstName}</td>\n      <td>{username}</td>\n      <td>{role}</td>\n    </tr>\n  )\n}\n\nexport default function UserListings(props) {\n  const [users, setUsers] = useState([]) \n\n  useEffect(() => {\n    const users = getUsers().then((data) => {\n      if (data.users) {\n        setUsers(data.users)\n      }\n    })\n  }, [])\n\n  return (\n    <table className=\"uk-table uk-table-middle uk-table-divider uk-table-hover uk-margin-medium\">\n      <thead>\n        <tr>\n          <th className=\"uk-table-small\"></th>\n          <th className=\"uk-table-small\"></th>\n          <th className=\"uk-width-small\">Last Name</th>\n          <th>First Name</th>\n          <th>Username</th>\n          <th>Role</th>\n        </tr>\n      </thead>\n      <tbody>\n        {users.map(({id, firstName, lastName, username, role}) => (\n          <UserRow\n            id={id}\n            firstName={firstName}\n            lastName={lastName}\n            username={username}\n            role={role}\n          />\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { Switch, Link, Route, Redirect } from 'react-router-dom'\nimport { UrlFor } from './routes'\n\nimport Header from './Header'\nimport PaginationButtons from './PaginationButton'\nimport SearchForm from './SearchForm'\nimport RecordTable from './RecordTable'\nimport RecordDetail from './RecordDetail'\nimport LoginForm from './LoginForm'\n\nimport Dashboard from './Dashboard'\n\nimport { getPublicListingData } from './api'\nimport { useSearchParams } from './hooks'\nimport { useAuth, PrivateRoute } from './auth.js'\nimport EditRecord from './admin/RecordForm'\nimport UserForm from './admin/UserForm'\nimport UserListings from './admin/UserListings'\n\nfunction getOffset(searchParameters) {\n  let offsetParam = searchParameters.get('offset')\n  if (offsetParam === null) {\n    return 0\n  }\n  let offset = parseInt(offsetParam)\n  if (isNaN(offset)) {\n    return 0\n  }\n\n  return offset\n}\n\nfunction App() {\n  const auth = useAuth()\n\n  const searchParameters = useSearchParams()\n  const offset = getOffset(searchParameters)\n\n  const [records, setRecords] = useState(null)\n  const [years, setYears] = useState([])\n  const [pages, setPages] = useState(null)\n  const [recordTypes, setRecordTypes] = useState([])\n  const [collections, setCollections] = useState([])\n  const [sourceArchives, setSourceArchives] = useState([])\n  const [recordStatus, setRecordStatus] = useState([])\n\n  // stores whether a search was run or not\n  // used to show different error messages in record table\n  const [searched, setSearched] = useState(false)\n\n  const handleSearch = (searchParams) => {\n    const {\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n    } = searchParams\n    const params = {\n      offset,\n      query,\n      searchYear,\n      searchCollection,\n      searchSourceArchive,\n      searchRecordType,\n    }\n    getPublicListingData(params).then(({ records, pages, years }) => {\n      setRecords(records)\n      setPages(pages)\n      setYears(years)\n      setSearched(true)\n    })\n  }\n\n  useEffect(() => {\n    getPublicListingData({ offset }).then(\n      ({ records, pages, years, collections, sourceArchives, recordTypes }) => {\n        setRecords(records)\n        setPages(pages)\n        setYears(years)\n        setCollections(collections)\n        setSourceArchives(sourceArchives)\n        setRecordTypes(recordTypes)\n      },\n    )\n  }, [offset])\n\n  return (\n    <div className=\"uk-marign-top\">\n      <header>\n        <h1> History Database </h1>\n        <nav className=\"uk-navbar\">\n          <div className=\"uk-nav-bar-left\">\n            <ul className=\"uk-navbar-nav\">\n              {auth.user ? (\n                <li>\n                  <Link to={UrlFor('adminHome')}> Dashboard </Link>\n                </li>\n              ) : (\n                <li>\n                  <Link to={UrlFor('home')}> Home </Link>\n                </li>\n              )}\n            </ul>\n          </div>\n          <div className=\"uk-navbar-right\">\n            <ul className=\"uk-navbar-nav\">\n              {auth.user ? (\n                <li>\n                  <Link\n                    to={UrlFor('logout')}\n                    onClick={() => {\n                      auth.signout()\n                    }}\n                  >\n                    {' '}\n                    Logout{' '}\n                  </Link>\n                </li>\n              ) : (\n                <li>\n                  <Link to={UrlFor('login')}> Login </Link>\n                </li>\n              )}\n            </ul>\n          </div>\n        </nav>\n      </header>\n\n      <Switch>\n        <Route path={UrlFor('viewRecord')}>\n          <Header>\n            <h1 className=\"uk-text-lead\"> History Record </h1>\n          </Header>\n\n          <RecordDetail records={records} />\n        </Route>\n\n        <Route path={UrlFor('login')}>\n          <LoginForm />\n        </Route>\n\n        <PrivateRoute path={UrlFor('editRecord')}>\n          <EditRecord\n            recordTypes={recordTypes}\n            collections={collections}\n            sourceArchives={sourceArchives}\n            recordStatus={recordStatus}\n          />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('adminHome')}>\n          <Dashboard records={records} />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('addUser')}>\n          <UserForm />\n        </PrivateRoute>\n\n        <PrivateRoute path={UrlFor('showUsers')}>\n          <UserListings />\n        </PrivateRoute>\n        <Route path={UrlFor('logout')}>\n          <Redirect to={UrlFor('home')} />\n        </Route>\n\n        {auth.user ? (\n          <Route path={UrlFor('home')}>\n            <Redirect to={UrlFor('adminHome')} />\n          </Route>\n        ) : (\n          <Route exact path={UrlFor('home')}>\n            <Header>\n              <h1 className=\"uk-text-lead\"> History Listing </h1>\n              <SearchForm\n                years={!years ? [] : years}\n                recordTypes={recordTypes}\n                collections={collections}\n                sourceArchives={sourceArchives}\n                onSubmit={handleSearch}\n              />\n              <PaginationButtons\n                currentPage={!offset ? 0 : offset}\n                pages={pages}\n              />\n            </Header>\n            <RecordTable searched={searched} records={records} />\n          </Route>\n        )}\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'; \n\nimport './index.css';\nimport App from './App';\nimport {ProvideAuth} from './auth';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <ProvideAuth> \n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </ProvideAuth>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}